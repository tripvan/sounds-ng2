{"version":3,"file":"main.bundle.js","sources":["webpack:///src/main.ts","webpack:///./~/@angular/forms/src/facade/lang.js","webpack:///./~/@angular/forms/src/facade/collection.js","webpack:///./~/@angular/forms/src/directives/control_value_accessor.js","webpack:///./~/@angular/forms/src/validators.js","webpack:///./~/@angular/forms/src/directives/control_container.js","webpack:///./~/@angular/forms/src/directives/shared.js","webpack:///./~/@angular/forms/src/directives/ng_control.js","webpack:///./~/@angular/forms/src/facade/exceptions.js","webpack:///./~/@angular/forms/src/facade/async.js","webpack:///src/app/services/quantone.service.ts","webpack:///src/app/services/spotify.service.ts","webpack:///./~/@angular/forms/src/directives/abstract_form_group_directive.js","webpack:///./~/@angular/forms/src/directives/ng_form.js","webpack:///./~/@angular/forms/src/directives/reactive_directives/form_group_directive.js","webpack:///./~/@angular/forms/src/directives/reactive_directives/form_group_name.js","webpack:///./~/@angular/forms/src/directives/checkbox_value_accessor.js","webpack:///./~/@angular/forms/src/directives/default_value_accessor.js","webpack:///./~/@angular/forms/src/directives/ng_model_group.js","webpack:///./~/@angular/forms/src/directives/radio_control_value_accessor.js","webpack:///./~/@angular/forms/src/directives/select_control_value_accessor.js","webpack:///./~/@angular/forms/src/directives/select_multiple_control_value_accessor.js","webpack:///./~/@angular/forms/src/model.js","webpack:///src/app/shared/shared.module.ts","webpack:///./~/@angular/forms/src/directives/abstract_control_directive.js","webpack:///./~/@angular/forms/src/directives/ng_control_status.js","webpack:///./~/@angular/forms/src/directives/ng_model.js","webpack:///./~/@angular/forms/src/directives/number_value_accessor.js","webpack:///./~/@angular/forms/src/directives/reactive_directives/form_control_directive.js","webpack:///./~/@angular/forms/src/directives/reactive_directives/form_control_name.js","webpack:///./~/@angular/forms/src/directives/reactive_errors.js","webpack:///./~/@angular/forms/src/directives/validators.js","webpack:///./~/@angular/forms/src/directives.js","webpack:///./~/@angular/forms/src/directives/error_examples.js","webpack:///./~/@angular/forms/src/directives/template_driven_errors.js","webpack:///./~/@angular/forms/src/facade/base_wrapped_exception.js","webpack:///./~/@angular/forms/src/facade/exception_handler.js","webpack:///./~/@angular/forms/src/form_builder.js","webpack:///src/app/albums/albums.component.ts","webpack:///src/app/artist/artist-albums.component.ts","webpack:///src/app/artist/artist.component.ts","webpack:///src/app/services/model/searchQuery.ts","webpack:///src/app/services/model/spotifyAlbum.ts","webpack:///src/app/services/years.service.ts","webpack:///./~/@angular/forms/index.js","webpack:///./~/@angular/forms/src/directives/normalize_validator.js","webpack:///./~/@angular/forms/src/form_providers.js","webpack:///./~/@angular/forms/src/forms.js","webpack:///src/app/albums/albums.module.ts","webpack:///src/app/albums/albums.routing.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/artist/artist.module.ts","webpack:///src/app/artist/artist.routing.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.module.ts","webpack:///src/app/services/model/artist.ts","webpack:///src/app/services/model/artistSearchQuery.ts","webpack:///src/app/services/model/spotifyAlbums.ts","webpack:///src/app/services/model/track.ts","webpack:///src/app/shared/album/album.component.ts","webpack:///src/app/shared/infinite-scroll/infinite-scroll.component.ts","webpack:///./src/app/albums/albums.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/artist/artist-albums.component.html","webpack:///./src/app/artist/artist.component.html","webpack:///./src/app/header/header.component.html","webpack:///./src/app/shared/album/album.component.html","webpack:///./src/app/app.component.css","webpack:///./src/app/artist/artist.component.css","webpack:///./src/app/header/header.component.css","webpack:///./src/app/shared/album/album.component.css"],"sourcesContent":["require(\"bootstrap/less/bootstrap.less\");\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n/** WEBPACK FOOTER **\n ** src/main.ts\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar globalScope;\nif (typeof window === 'undefined') {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n        // TODO: Replace any with WorkerGlobalScope from lib.webworker.d.ts #3492\n        globalScope = self;\n    }\n    else {\n        globalScope = global;\n    }\n}\nelse {\n    globalScope = window;\n}\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\nexports.scheduleMicroTask = scheduleMicroTask;\n// Need to declare a new variable for global here since TypeScript\n// exports the original value of the symbol.\nvar _global = globalScope;\nexports.global = _global;\n/**\n * Runtime representation a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * @stable\n */\nexports.Type = Function;\nfunction getTypeNameForDebugging(type) {\n    if (type['name']) {\n        return type['name'];\n    }\n    return typeof type;\n}\nexports.getTypeNameForDebugging = getTypeNameForDebugging;\nexports.Math = _global.Math;\nexports.Date = _global.Date;\n// TODO: remove calls to assert in production environment\n// Note: Can't just export this and import in in other files\n// as `assert` is a reserved keyword in Dart\n_global.assert = function assert(condition) {\n    // TODO: to be fixed properly via #2830, noop for now\n};\nfunction isPresent(obj) {\n    return obj !== undefined && obj !== null;\n}\nexports.isPresent = isPresent;\nfunction isBlank(obj) {\n    return obj === undefined || obj === null;\n}\nexports.isBlank = isBlank;\nfunction isBoolean(obj) {\n    return typeof obj === 'boolean';\n}\nexports.isBoolean = isBoolean;\nfunction isNumber(obj) {\n    return typeof obj === 'number';\n}\nexports.isNumber = isNumber;\nfunction isString(obj) {\n    return typeof obj === 'string';\n}\nexports.isString = isString;\nfunction isFunction(obj) {\n    return typeof obj === 'function';\n}\nexports.isFunction = isFunction;\nfunction isType(obj) {\n    return isFunction(obj);\n}\nexports.isType = isType;\nfunction isStringMap(obj) {\n    return typeof obj === 'object' && obj !== null;\n}\nexports.isStringMap = isStringMap;\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\nfunction isStrictStringMap(obj) {\n    return isStringMap(obj) && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\nexports.isStrictStringMap = isStrictStringMap;\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return isPresent(obj) && isFunction(obj.then);\n}\nexports.isPromise = isPromise;\nfunction isArray(obj) {\n    return Array.isArray(obj);\n}\nexports.isArray = isArray;\nfunction isDate(obj) {\n    return obj instanceof exports.Date && !isNaN(obj.valueOf());\n}\nexports.isDate = isDate;\nfunction noop() { }\nexports.noop = noop;\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token === undefined || token === null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return token.overriddenName;\n    }\n    if (token.name) {\n        return token.name;\n    }\n    var res = token.toString();\n    var newLineIndex = res.indexOf('\\n');\n    return (newLineIndex === -1) ? res : res.substring(0, newLineIndex);\n}\nexports.stringify = stringify;\n// serialize / deserialize enum exist only for consistency with dart API\n// enums in typescript don't need to be serialized\nfunction serializeEnum(val) {\n    return val;\n}\nexports.serializeEnum = serializeEnum;\nfunction deserializeEnum(val, values) {\n    return val;\n}\nexports.deserializeEnum = deserializeEnum;\nfunction resolveEnumToken(enumValue, val) {\n    return enumValue[val];\n}\nexports.resolveEnumToken = resolveEnumToken;\nvar StringWrapper = (function () {\n    function StringWrapper() {\n    }\n    StringWrapper.fromCharCode = function (code) { return String.fromCharCode(code); };\n    StringWrapper.charCodeAt = function (s, index) { return s.charCodeAt(index); };\n    StringWrapper.split = function (s, regExp) { return s.split(regExp); };\n    StringWrapper.equals = function (s, s2) { return s === s2; };\n    StringWrapper.stripLeft = function (s, charVal) {\n        if (s && s.length) {\n            var pos = 0;\n            for (var i = 0; i < s.length; i++) {\n                if (s[i] != charVal)\n                    break;\n                pos++;\n            }\n            s = s.substring(pos);\n        }\n        return s;\n    };\n    StringWrapper.stripRight = function (s, charVal) {\n        if (s && s.length) {\n            var pos = s.length;\n            for (var i = s.length - 1; i >= 0; i--) {\n                if (s[i] != charVal)\n                    break;\n                pos--;\n            }\n            s = s.substring(0, pos);\n        }\n        return s;\n    };\n    StringWrapper.replace = function (s, from, replace) {\n        return s.replace(from, replace);\n    };\n    StringWrapper.replaceAll = function (s, from, replace) {\n        return s.replace(from, replace);\n    };\n    StringWrapper.slice = function (s, from, to) {\n        if (from === void 0) { from = 0; }\n        if (to === void 0) { to = null; }\n        return s.slice(from, to === null ? undefined : to);\n    };\n    StringWrapper.replaceAllMapped = function (s, from, cb) {\n        return s.replace(from, function () {\n            var matches = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                matches[_i - 0] = arguments[_i];\n            }\n            // Remove offset & string from the result array\n            matches.splice(-2, 2);\n            // The callback receives match, p1, ..., pn\n            return cb(matches);\n        });\n    };\n    StringWrapper.contains = function (s, substr) { return s.indexOf(substr) != -1; };\n    StringWrapper.compare = function (a, b) {\n        if (a < b) {\n            return -1;\n        }\n        else if (a > b) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    };\n    return StringWrapper;\n}());\nexports.StringWrapper = StringWrapper;\nvar StringJoiner = (function () {\n    function StringJoiner(parts) {\n        if (parts === void 0) { parts = []; }\n        this.parts = parts;\n    }\n    StringJoiner.prototype.add = function (part) { this.parts.push(part); };\n    StringJoiner.prototype.toString = function () { return this.parts.join(''); };\n    return StringJoiner;\n}());\nexports.StringJoiner = StringJoiner;\nvar NumberParseError = (function (_super) {\n    __extends(NumberParseError, _super);\n    function NumberParseError(message) {\n        _super.call(this);\n        this.message = message;\n    }\n    NumberParseError.prototype.toString = function () { return this.message; };\n    return NumberParseError;\n}(Error));\nexports.NumberParseError = NumberParseError;\nvar NumberWrapper = (function () {\n    function NumberWrapper() {\n    }\n    NumberWrapper.toFixed = function (n, fractionDigits) { return n.toFixed(fractionDigits); };\n    NumberWrapper.equal = function (a, b) { return a === b; };\n    NumberWrapper.parseIntAutoRadix = function (text) {\n        var result = parseInt(text);\n        if (isNaN(result)) {\n            throw new NumberParseError('Invalid integer literal when parsing ' + text);\n        }\n        return result;\n    };\n    NumberWrapper.parseInt = function (text, radix) {\n        if (radix == 10) {\n            if (/^(\\-|\\+)?[0-9]+$/.test(text)) {\n                return parseInt(text, radix);\n            }\n        }\n        else if (radix == 16) {\n            if (/^(\\-|\\+)?[0-9ABCDEFabcdef]+$/.test(text)) {\n                return parseInt(text, radix);\n            }\n        }\n        else {\n            var result = parseInt(text, radix);\n            if (!isNaN(result)) {\n                return result;\n            }\n        }\n        throw new NumberParseError('Invalid integer literal when parsing ' + text + ' in base ' + radix);\n    };\n    // TODO: NaN is a valid literal but is returned by parseFloat to indicate an error.\n    NumberWrapper.parseFloat = function (text) { return parseFloat(text); };\n    Object.defineProperty(NumberWrapper, \"NaN\", {\n        get: function () { return NaN; },\n        enumerable: true,\n        configurable: true\n    });\n    NumberWrapper.isNumeric = function (value) { return !isNaN(value - parseFloat(value)); };\n    NumberWrapper.isNaN = function (value) { return isNaN(value); };\n    NumberWrapper.isInteger = function (value) { return Number.isInteger(value); };\n    return NumberWrapper;\n}());\nexports.NumberWrapper = NumberWrapper;\nexports.RegExp = _global.RegExp;\nvar FunctionWrapper = (function () {\n    function FunctionWrapper() {\n    }\n    FunctionWrapper.apply = function (fn, posArgs) { return fn.apply(null, posArgs); };\n    FunctionWrapper.bind = function (fn, scope) { return fn.bind(scope); };\n    return FunctionWrapper;\n}());\nexports.FunctionWrapper = FunctionWrapper;\n// JS has NaN !== NaN\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\nexports.looseIdentical = looseIdentical;\n// JS considers NaN is the same as NaN for map Key (while NaN !== NaN otherwise)\n// see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\nfunction getMapKey(value) {\n    return value;\n}\nexports.getMapKey = getMapKey;\nfunction normalizeBlank(obj) {\n    return isBlank(obj) ? null : obj;\n}\nexports.normalizeBlank = normalizeBlank;\nfunction normalizeBool(obj) {\n    return isBlank(obj) ? false : obj;\n}\nexports.normalizeBool = normalizeBool;\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\nexports.isJsObject = isJsObject;\nfunction print(obj) {\n    console.log(obj);\n}\nexports.print = print;\nfunction warn(obj) {\n    console.warn(obj);\n}\nexports.warn = warn;\n// Can't be all uppercase as our transpiler would think it is a special directive...\nvar Json = (function () {\n    function Json() {\n    }\n    Json.parse = function (s) { return _global.JSON.parse(s); };\n    Json.stringify = function (data) {\n        // Dart doesn't take 3 arguments\n        return _global.JSON.stringify(data, null, 2);\n    };\n    return Json;\n}());\nexports.Json = Json;\nvar DateWrapper = (function () {\n    function DateWrapper() {\n    }\n    DateWrapper.create = function (year, month, day, hour, minutes, seconds, milliseconds) {\n        if (month === void 0) { month = 1; }\n        if (day === void 0) { day = 1; }\n        if (hour === void 0) { hour = 0; }\n        if (minutes === void 0) { minutes = 0; }\n        if (seconds === void 0) { seconds = 0; }\n        if (milliseconds === void 0) { milliseconds = 0; }\n        return new exports.Date(year, month - 1, day, hour, minutes, seconds, milliseconds);\n    };\n    DateWrapper.fromISOString = function (str) { return new exports.Date(str); };\n    DateWrapper.fromMillis = function (ms) { return new exports.Date(ms); };\n    DateWrapper.toMillis = function (date) { return date.getTime(); };\n    DateWrapper.now = function () { return new exports.Date(); };\n    DateWrapper.toJson = function (date) { return date.toJSON(); };\n    return DateWrapper;\n}());\nexports.DateWrapper = DateWrapper;\nfunction setValueOnPath(global, path, value) {\n    var parts = path.split('.');\n    var obj = global;\n    while (parts.length > 1) {\n        var name = parts.shift();\n        if (obj.hasOwnProperty(name) && isPresent(obj[name])) {\n            obj = obj[name];\n        }\n        else {\n            obj = obj[name] = {};\n        }\n    }\n    if (obj === undefined || obj === null) {\n        obj = {};\n    }\n    obj[parts.shift()] = value;\n}\nexports.setValueOnPath = setValueOnPath;\nvar _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (isBlank(_symbolIterator)) {\n        if (isPresent(globalScope.Symbol) && isPresent(Symbol.iterator)) {\n            _symbolIterator = Symbol.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nexports.getSymbolIterator = getSymbolIterator;\nfunction evalExpression(sourceUrl, expr, declarations, vars) {\n    var fnBody = declarations + \"\\nreturn \" + expr + \"\\n//# sourceURL=\" + sourceUrl;\n    var fnArgNames = [];\n    var fnArgValues = [];\n    for (var argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\nexports.evalExpression = evalExpression;\nfunction isPrimitive(obj) {\n    return !isJsObject(obj);\n}\nexports.isPrimitive = isPrimitive;\nfunction hasConstructor(value, type) {\n    return value.constructor === type;\n}\nexports.hasConstructor = hasConstructor;\nfunction escape(s) {\n    return _global.encodeURI(s);\n}\nexports.escape = escape;\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nexports.escapeRegExp = escapeRegExp;\n//# sourceMappingURL=lang.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/facade/lang.js\n ** module id = 29\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar lang_1 = require('./lang');\nexports.Map = lang_1.global.Map;\nexports.Set = lang_1.global.Set;\n// Safari and Internet Explorer do not support the iterable parameter to the\n// Map constructor.  We work around that by manually adding the items.\nvar createMapFromPairs = (function () {\n    try {\n        if (new exports.Map([[1, 2]]).size === 1) {\n            return function createMapFromPairs(pairs) { return new exports.Map(pairs); };\n        }\n    }\n    catch (e) {\n    }\n    return function createMapAndPopulateFromPairs(pairs) {\n        var map = new exports.Map();\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            map.set(pair[0], pair[1]);\n        }\n        return map;\n    };\n})();\nvar createMapFromMap = (function () {\n    try {\n        if (new exports.Map(new exports.Map())) {\n            return function createMapFromMap(m) { return new exports.Map(m); };\n        }\n    }\n    catch (e) {\n    }\n    return function createMapAndPopulateFromMap(m) {\n        var map = new exports.Map();\n        m.forEach(function (v, k) { map.set(k, v); });\n        return map;\n    };\n})();\nvar _clearValues = (function () {\n    if ((new exports.Map()).keys().next) {\n        return function _clearValues(m) {\n            var keyIterator = m.keys();\n            var k;\n            while (!((k = keyIterator.next()).done)) {\n                m.set(k.value, null);\n            }\n        };\n    }\n    else {\n        return function _clearValuesWithForeEach(m) {\n            m.forEach(function (v, k) { m.set(k, null); });\n        };\n    }\n})();\n// Safari doesn't implement MapIterator.next(), which is used is Traceur's polyfill of Array.from\n// TODO(mlaval): remove the work around once we have a working polyfill of Array.from\nvar _arrayFromMap = (function () {\n    try {\n        if ((new exports.Map()).values().next) {\n            return function createArrayFromMap(m, getValues) {\n                return getValues ? Array.from(m.values()) : Array.from(m.keys());\n            };\n        }\n    }\n    catch (e) {\n    }\n    return function createArrayFromMapWithForeach(m, getValues) {\n        var res = ListWrapper.createFixedSize(m.size), i = 0;\n        m.forEach(function (v, k) {\n            res[i] = getValues ? v : k;\n            i++;\n        });\n        return res;\n    };\n})();\nvar MapWrapper = (function () {\n    function MapWrapper() {\n    }\n    MapWrapper.clone = function (m) { return createMapFromMap(m); };\n    MapWrapper.createFromStringMap = function (stringMap) {\n        var result = new exports.Map();\n        for (var prop in stringMap) {\n            result.set(prop, stringMap[prop]);\n        }\n        return result;\n    };\n    MapWrapper.toStringMap = function (m) {\n        var r = {};\n        m.forEach(function (v, k) { return r[k] = v; });\n        return r;\n    };\n    MapWrapper.createFromPairs = function (pairs) { return createMapFromPairs(pairs); };\n    MapWrapper.clearValues = function (m) { _clearValues(m); };\n    MapWrapper.iterable = function (m) { return m; };\n    MapWrapper.keys = function (m) { return _arrayFromMap(m, false); };\n    MapWrapper.values = function (m) { return _arrayFromMap(m, true); };\n    return MapWrapper;\n}());\nexports.MapWrapper = MapWrapper;\n/**\n * Wraps Javascript Objects\n */\nvar StringMapWrapper = (function () {\n    function StringMapWrapper() {\n    }\n    StringMapWrapper.create = function () {\n        // Note: We are not using Object.create(null) here due to\n        // performance!\n        // http://jsperf.com/ng2-object-create-null\n        return {};\n    };\n    StringMapWrapper.contains = function (map, key) {\n        return map.hasOwnProperty(key);\n    };\n    StringMapWrapper.get = function (map, key) {\n        return map.hasOwnProperty(key) ? map[key] : undefined;\n    };\n    StringMapWrapper.set = function (map, key, value) { map[key] = value; };\n    StringMapWrapper.keys = function (map) { return Object.keys(map); };\n    StringMapWrapper.values = function (map) {\n        return Object.keys(map).map(function (k) { return map[k]; });\n    };\n    StringMapWrapper.isEmpty = function (map) {\n        for (var prop in map) {\n            return false;\n        }\n        return true;\n    };\n    StringMapWrapper.delete = function (map, key) { delete map[key]; };\n    StringMapWrapper.forEach = function (map, callback) {\n        for (var _i = 0, _a = Object.keys(map); _i < _a.length; _i++) {\n            var k = _a[_i];\n            callback(map[k], k);\n        }\n    };\n    StringMapWrapper.merge = function (m1, m2) {\n        var m = {};\n        for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n            var k = _a[_i];\n            m[k] = m1[k];\n        }\n        for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n            var k = _c[_b];\n            m[k] = m2[k];\n        }\n        return m;\n    };\n    StringMapWrapper.equals = function (m1, m2) {\n        var k1 = Object.keys(m1);\n        var k2 = Object.keys(m2);\n        if (k1.length != k2.length) {\n            return false;\n        }\n        var key;\n        for (var i = 0; i < k1.length; i++) {\n            key = k1[i];\n            if (m1[key] !== m2[key]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return StringMapWrapper;\n}());\nexports.StringMapWrapper = StringMapWrapper;\nvar ListWrapper = (function () {\n    function ListWrapper() {\n    }\n    // JS has no way to express a statically fixed size list, but dart does so we\n    // keep both methods.\n    ListWrapper.createFixedSize = function (size) { return new Array(size); };\n    ListWrapper.createGrowableSize = function (size) { return new Array(size); };\n    ListWrapper.clone = function (array) { return array.slice(0); };\n    ListWrapper.forEachWithIndex = function (array, fn) {\n        for (var i = 0; i < array.length; i++) {\n            fn(array[i], i);\n        }\n    };\n    ListWrapper.first = function (array) {\n        if (!array)\n            return null;\n        return array[0];\n    };\n    ListWrapper.last = function (array) {\n        if (!array || array.length == 0)\n            return null;\n        return array[array.length - 1];\n    };\n    ListWrapper.indexOf = function (array, value, startIndex) {\n        if (startIndex === void 0) { startIndex = 0; }\n        return array.indexOf(value, startIndex);\n    };\n    ListWrapper.contains = function (list, el) { return list.indexOf(el) !== -1; };\n    ListWrapper.reversed = function (array) {\n        var a = ListWrapper.clone(array);\n        return a.reverse();\n    };\n    ListWrapper.concat = function (a, b) { return a.concat(b); };\n    ListWrapper.insert = function (list, index, value) { list.splice(index, 0, value); };\n    ListWrapper.removeAt = function (list, index) {\n        var res = list[index];\n        list.splice(index, 1);\n        return res;\n    };\n    ListWrapper.removeAll = function (list, items) {\n        for (var i = 0; i < items.length; ++i) {\n            var index = list.indexOf(items[i]);\n            list.splice(index, 1);\n        }\n    };\n    ListWrapper.remove = function (list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n            return true;\n        }\n        return false;\n    };\n    ListWrapper.clear = function (list) { list.length = 0; };\n    ListWrapper.isEmpty = function (list) { return list.length == 0; };\n    ListWrapper.fill = function (list, value, start, end) {\n        if (start === void 0) { start = 0; }\n        if (end === void 0) { end = null; }\n        list.fill(value, start, end === null ? list.length : end);\n    };\n    ListWrapper.equals = function (a, b) {\n        if (a.length != b.length)\n            return false;\n        for (var i = 0; i < a.length; ++i) {\n            if (a[i] !== b[i])\n                return false;\n        }\n        return true;\n    };\n    ListWrapper.slice = function (l, from, to) {\n        if (from === void 0) { from = 0; }\n        if (to === void 0) { to = null; }\n        return l.slice(from, to === null ? undefined : to);\n    };\n    ListWrapper.splice = function (l, from, length) { return l.splice(from, length); };\n    ListWrapper.sort = function (l, compareFn) {\n        if (lang_1.isPresent(compareFn)) {\n            l.sort(compareFn);\n        }\n        else {\n            l.sort();\n        }\n    };\n    ListWrapper.toString = function (l) { return l.toString(); };\n    ListWrapper.toJSON = function (l) { return JSON.stringify(l); };\n    ListWrapper.maximum = function (list, predicate) {\n        if (list.length == 0) {\n            return null;\n        }\n        var solution = null;\n        var maxValue = -Infinity;\n        for (var index = 0; index < list.length; index++) {\n            var candidate = list[index];\n            if (lang_1.isBlank(candidate)) {\n                continue;\n            }\n            var candidateValue = predicate(candidate);\n            if (candidateValue > maxValue) {\n                solution = candidate;\n                maxValue = candidateValue;\n            }\n        }\n        return solution;\n    };\n    ListWrapper.flatten = function (list) {\n        var target = [];\n        _flattenArray(list, target);\n        return target;\n    };\n    ListWrapper.addAll = function (list, source) {\n        for (var i = 0; i < source.length; i++) {\n            list.push(source[i]);\n        }\n    };\n    return ListWrapper;\n}());\nexports.ListWrapper = ListWrapper;\nfunction _flattenArray(source, target) {\n    if (lang_1.isPresent(source)) {\n        for (var i = 0; i < source.length; i++) {\n            var item = source[i];\n            if (lang_1.isArray(item)) {\n                _flattenArray(item, target);\n            }\n            else {\n                target.push(item);\n            }\n        }\n    }\n    return target;\n}\nfunction isListLikeIterable(obj) {\n    if (!lang_1.isJsObject(obj))\n        return false;\n    return lang_1.isArray(obj) ||\n        (!(obj instanceof exports.Map) &&\n            lang_1.getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nexports.isListLikeIterable = isListLikeIterable;\nfunction areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[lang_1.getSymbolIterator()]();\n    var iterator2 = b[lang_1.getSymbolIterator()]();\n    while (true) {\n        var item1 = iterator1.next();\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nexports.areIterablesEqual = areIterablesEqual;\nfunction iterateListLike(obj, fn) {\n    if (lang_1.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[lang_1.getSymbolIterator()]();\n        var item;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\nexports.iterateListLike = iterateListLike;\n// Safari and Internet Explorer do not support the iterable parameter to the\n// Set constructor.  We work around that by manually adding the items.\nvar createSetFromList = (function () {\n    var test = new exports.Set([1, 2, 3]);\n    if (test.size === 3) {\n        return function createSetFromList(lst) { return new exports.Set(lst); };\n    }\n    else {\n        return function createSetAndPopulateFromList(lst) {\n            var res = new exports.Set(lst);\n            if (res.size !== lst.length) {\n                for (var i = 0; i < lst.length; i++) {\n                    res.add(lst[i]);\n                }\n            }\n            return res;\n        };\n    }\n})();\nvar SetWrapper = (function () {\n    function SetWrapper() {\n    }\n    SetWrapper.createFromList = function (lst) { return createSetFromList(lst); };\n    SetWrapper.has = function (s, key) { return s.has(key); };\n    SetWrapper.delete = function (m, k) { m.delete(k); };\n    return SetWrapper;\n}());\nexports.SetWrapper = SetWrapper;\n//# sourceMappingURL=collection.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/facade/collection.js\n ** module id = 46\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\n/**\n * Used to provide a {@link ControlValueAccessor} for form controls.\n *\n * See {@link DefaultValueAccessor} for how to implement one.\n * @experimental\n */\nexports.NG_VALUE_ACCESSOR = new core_1.OpaqueToken('NgValueAccessor');\n//# sourceMappingURL=control_value_accessor.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/control_value_accessor.js\n ** module id = 51\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar toPromise_1 = require('rxjs/operator/toPromise');\nvar collection_1 = require('./facade/collection');\nvar lang_1 = require('./facade/lang');\n/**\n * Providers for validators to be used for {@link FormControl}s in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * ### Example\n *\n * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n * @experimental\n */\nexports.NG_VALIDATORS = new core_1.OpaqueToken('NgValidators');\n/**\n * Providers for asynchronous validators to be used for {@link FormControl}s\n * in a form.\n *\n * Provide this using `multi: true` to add validators.\n *\n * See {@link NG_VALIDATORS} for more details.\n *\n * @experimental\n */\nexports.NG_ASYNC_VALIDATORS = new core_1.OpaqueToken('NgAsyncValidators');\n/**\n * Provides a set of validators used by form controls.\n *\n * A validator is a function that processes a {@link FormControl} or collection of\n * controls and returns a map of errors. A null map means that validation has passed.\n *\n * ### Example\n *\n * ```typescript\n * var loginControl = new FormControl(\"\", Validators.required)\n * ```\n *\n * @experimental\n */\nvar Validators = (function () {\n    function Validators() {\n    }\n    /**\n     * Validator that requires controls to have a non-empty value.\n     */\n    Validators.required = function (control) {\n        return lang_1.isBlank(control.value) || (lang_1.isString(control.value) && control.value == '') ?\n            { 'required': true } :\n            null;\n    };\n    /**\n     * Validator that requires controls to have a value of a minimum length.\n     */\n    Validators.minLength = function (minLength) {\n        return function (control) {\n            if (lang_1.isPresent(Validators.required(control)))\n                return null;\n            var v = control.value;\n            return v.length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': v.length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires controls to have a value of a maximum length.\n     */\n    Validators.maxLength = function (maxLength) {\n        return function (control) {\n            if (lang_1.isPresent(Validators.required(control)))\n                return null;\n            var v = control.value;\n            return v.length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': v.length } } :\n                null;\n        };\n    };\n    /**\n     * Validator that requires a control to match a regex to its value.\n     */\n    Validators.pattern = function (pattern) {\n        return function (control) {\n            if (lang_1.isPresent(Validators.required(control)))\n                return null;\n            var regex = new RegExp(\"^\" + pattern + \"$\");\n            var v = control.value;\n            return regex.test(v) ? null :\n                { 'pattern': { 'requiredPattern': \"^\" + pattern + \"$\", 'actualValue': v } };\n        };\n    };\n    /**\n     * No-op validator.\n     */\n    Validators.nullValidator = function (c) { return null; };\n    /**\n     * Compose multiple validators into a single function that returns the union\n     * of the individual error maps.\n     */\n    Validators.compose = function (validators) {\n        if (lang_1.isBlank(validators))\n            return null;\n        var presentValidators = validators.filter(lang_1.isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    };\n    Validators.composeAsync = function (validators) {\n        if (lang_1.isBlank(validators))\n            return null;\n        var presentValidators = validators.filter(lang_1.isPresent);\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            var promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n            return Promise.all(promises).then(_mergeErrors);\n        };\n    };\n    return Validators;\n}());\nexports.Validators = Validators;\nfunction _convertToPromise(obj) {\n    return lang_1.isPromise(obj) ? obj : toPromise_1.toPromise.call(obj);\n}\nfunction _executeValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(function (v) { return v(control); });\n}\nfunction _mergeErrors(arrayOfErrors) {\n    var res = arrayOfErrors.reduce(function (res, errors) {\n        return lang_1.isPresent(errors) ? collection_1.StringMapWrapper.merge(res, errors) : res;\n    }, {});\n    return collection_1.StringMapWrapper.isEmpty(res) ? null : res;\n}\n//# sourceMappingURL=validators.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/validators.js\n ** module id = 52\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar abstract_control_directive_1 = require('./abstract_control_directive');\n/**\n * A directive that contains multiple {@link NgControl}s.\n *\n * Only used by the forms module.\n *\n * @experimental\n */\nvar ControlContainer = (function (_super) {\n    __extends(ControlContainer, _super);\n    function ControlContainer() {\n        _super.apply(this, arguments);\n    }\n    Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n        /**\n         * Get the form to which this container belongs.\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ControlContainer.prototype, \"path\", {\n        /**\n         * Get the path to this container.\n         */\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    return ControlContainer;\n}(abstract_control_directive_1.AbstractControlDirective));\nexports.ControlContainer = ControlContainer;\n//# sourceMappingURL=control_container.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/control_container.js\n ** module id = 69\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar collection_1 = require('../facade/collection');\nvar exceptions_1 = require('../facade/exceptions');\nvar lang_1 = require('../facade/lang');\nvar validators_1 = require('../validators');\nvar checkbox_value_accessor_1 = require('./checkbox_value_accessor');\nvar default_value_accessor_1 = require('./default_value_accessor');\nvar normalize_validator_1 = require('./normalize_validator');\nvar number_value_accessor_1 = require('./number_value_accessor');\nvar radio_control_value_accessor_1 = require('./radio_control_value_accessor');\nvar select_control_value_accessor_1 = require('./select_control_value_accessor');\nvar select_multiple_control_value_accessor_1 = require('./select_multiple_control_value_accessor');\nfunction controlPath(name, parent) {\n    var p = collection_1.ListWrapper.clone(parent.path);\n    p.push(name);\n    return p;\n}\nexports.controlPath = controlPath;\nfunction setUpControl(control, dir) {\n    if (lang_1.isBlank(control))\n        _throwError(dir, 'Cannot find control with');\n    if (lang_1.isBlank(dir.valueAccessor))\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = validators_1.Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = validators_1.Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    dir.valueAccessor.writeValue(control.value);\n    // view -> model\n    dir.valueAccessor.registerOnChange(function (newValue) {\n        dir.viewToModelUpdate(newValue);\n        control.markAsDirty();\n        control.setValue(newValue, { emitModelToViewChange: false });\n    });\n    control.registerOnChange(function (newValue, emitModelEvent) {\n        // control -> view\n        dir.valueAccessor.writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n    // touched\n    dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n}\nexports.setUpControl = setUpControl;\nfunction setUpFormContainer(control, dir) {\n    if (lang_1.isBlank(control))\n        _throwError(dir, 'Cannot find control with');\n    control.validator = validators_1.Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = validators_1.Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\nexports.setUpFormContainer = setUpFormContainer;\nfunction _throwError(dir, message) {\n    var messageEnd;\n    if (dir.path.length > 1) {\n        messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n    }\n    else if (dir.path[0]) {\n        messageEnd = \"name: '\" + dir.path + \"'\";\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new exceptions_1.BaseException(message + \" \" + messageEnd);\n}\nfunction composeValidators(validators) {\n    return lang_1.isPresent(validators) ? validators_1.Validators.compose(validators.map(normalize_validator_1.normalizeValidator)) : null;\n}\nexports.composeValidators = composeValidators;\nfunction composeAsyncValidators(validators) {\n    return lang_1.isPresent(validators) ? validators_1.Validators.composeAsync(validators.map(normalize_validator_1.normalizeAsyncValidator)) :\n        null;\n}\nexports.composeAsyncValidators = composeAsyncValidators;\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!collection_1.StringMapWrapper.contains(changes, 'model'))\n        return false;\n    var change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !lang_1.looseIdentical(viewModel, change.currentValue);\n}\nexports.isPropertyUpdated = isPropertyUpdated;\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (lang_1.isBlank(valueAccessors))\n        return null;\n    var defaultAccessor;\n    var builtinAccessor;\n    var customAccessor;\n    valueAccessors.forEach(function (v) {\n        if (lang_1.hasConstructor(v, default_value_accessor_1.DefaultValueAccessor)) {\n            defaultAccessor = v;\n        }\n        else if (lang_1.hasConstructor(v, checkbox_value_accessor_1.CheckboxControlValueAccessor) || lang_1.hasConstructor(v, number_value_accessor_1.NumberValueAccessor) ||\n            lang_1.hasConstructor(v, select_control_value_accessor_1.SelectControlValueAccessor) ||\n            lang_1.hasConstructor(v, select_multiple_control_value_accessor_1.SelectMultipleControlValueAccessor) ||\n            lang_1.hasConstructor(v, radio_control_value_accessor_1.RadioControlValueAccessor)) {\n            if (lang_1.isPresent(builtinAccessor))\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (lang_1.isPresent(customAccessor))\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (lang_1.isPresent(customAccessor))\n        return customAccessor;\n    if (lang_1.isPresent(builtinAccessor))\n        return builtinAccessor;\n    if (lang_1.isPresent(defaultAccessor))\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\nexports.selectValueAccessor = selectValueAccessor;\n//# sourceMappingURL=shared.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/shared.js\n ** module id = 70\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar exceptions_1 = require('../facade/exceptions');\nvar abstract_control_directive_1 = require('./abstract_control_directive');\n/**\n * A base class that all control directive extend.\n * It binds a {@link Control} object to a DOM element.\n *\n * Used internally by Angular forms.\n *\n * @experimental\n */\nvar NgControl = (function (_super) {\n    __extends(NgControl, _super);\n    function NgControl() {\n        _super.apply(this, arguments);\n        this.name = null;\n        this.valueAccessor = null;\n    }\n    Object.defineProperty(NgControl.prototype, \"validator\", {\n        get: function () { return exceptions_1.unimplemented(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n        get: function () { return exceptions_1.unimplemented(); },\n        enumerable: true,\n        configurable: true\n    });\n    return NgControl;\n}(abstract_control_directive_1.AbstractControlDirective));\nexports.NgControl = NgControl;\n//# sourceMappingURL=ng_control.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/ng_control.js\n ** module id = 87\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar base_wrapped_exception_1 = require('./base_wrapped_exception');\nvar exception_handler_1 = require('./exception_handler');\nvar exception_handler_2 = require('./exception_handler');\nexports.ExceptionHandler = exception_handler_2.ExceptionHandler;\n/**\n * @stable\n */\nvar BaseException = (function (_super) {\n    __extends(BaseException, _super);\n    function BaseException(message) {\n        if (message === void 0) { message = '--'; }\n        _super.call(this, message);\n        this.message = message;\n        this.stack = (new Error(message)).stack;\n    }\n    BaseException.prototype.toString = function () { return this.message; };\n    return BaseException;\n}(Error));\nexports.BaseException = BaseException;\n/**\n * Wraps an exception and provides additional context or information.\n * @stable\n */\nvar WrappedException = (function (_super) {\n    __extends(WrappedException, _super);\n    function WrappedException(_wrapperMessage, _originalException /** TODO #9100 */, _originalStack /** TODO #9100 */, _context /** TODO #9100 */) {\n        _super.call(this, _wrapperMessage);\n        this._wrapperMessage = _wrapperMessage;\n        this._originalException = _originalException;\n        this._originalStack = _originalStack;\n        this._context = _context;\n        this._wrapperStack = (new Error(_wrapperMessage)).stack;\n    }\n    Object.defineProperty(WrappedException.prototype, \"wrapperMessage\", {\n        get: function () { return this._wrapperMessage; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WrappedException.prototype, \"wrapperStack\", {\n        get: function () { return this._wrapperStack; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WrappedException.prototype, \"originalException\", {\n        get: function () { return this._originalException; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WrappedException.prototype, \"originalStack\", {\n        get: function () { return this._originalStack; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WrappedException.prototype, \"context\", {\n        get: function () { return this._context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WrappedException.prototype, \"message\", {\n        get: function () { return exception_handler_1.ExceptionHandler.exceptionToString(this); },\n        enumerable: true,\n        configurable: true\n    });\n    WrappedException.prototype.toString = function () { return this.message; };\n    return WrappedException;\n}(base_wrapped_exception_1.BaseWrappedException));\nexports.WrappedException = WrappedException;\nfunction makeTypeError(message) {\n    return new TypeError(message);\n}\nexports.makeTypeError = makeTypeError;\nfunction unimplemented() {\n    throw new BaseException('unimplemented');\n}\nexports.unimplemented = unimplemented;\n//# sourceMappingURL=exceptions.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/facade/exceptions.js\n ** module id = 88\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subject_1 = require('rxjs/Subject');\nvar Observable_1 = require('rxjs/Observable');\nexports.Observable = Observable_1.Observable;\nvar Subject_2 = require('rxjs/Subject');\nexports.Subject = Subject_2.Subject;\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * @stable\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of [EventEmitter], which depending on [isAsync],\n     * delivers events synchronously or asynchronously.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        _super.call(this);\n        this.__isAsync = isAsync;\n    }\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @deprecated - use .emit(value) instead\n     */\n    EventEmitter.prototype.next = function (value) { _super.prototype.next.call(this, value); };\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value /** TODO #9100 */) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value /** TODO #9100 */) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value /** TODO #9100 */) {\n                setTimeout(function () { return generatorOrNext(value); });\n            } : function (value /** TODO #9100 */) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(Subject_1.Subject));\nexports.EventEmitter = EventEmitter;\n//# sourceMappingURL=async.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/facade/async.js\n ** module id = 108\n ** module chunks = 2\n **/","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/map\";\r\nimport \"rxjs/add/operator/concatAll\";\r\nimport \"rxjs/add/operator/catch\";\r\nimport \"rxjs/add/observable/from\";\r\n\r\nimport { Artist } from \"./model/artist\";\r\nimport { Album } from \"./model/album\";\r\n\r\n@Injectable()\r\nexport class QuantoneService {\r\n    constructor(private http: Http) {}\r\n\r\n    getArtist(artistId): Observable<Artist[]>  {\r\n        return this.http.get(\"http://qt-api.tristanchanning.com:8070/api/artist/\" + artistId)\r\n                    .map(this.extractData)\r\n                    .catch(this.handleError);\r\n    }\r\n    getArtists(artistIds: Array<string>): Observable<Artist[]>  {\r\n        return Observable.from(artistIds)\r\n            .map(artistId => {\r\n            return this.http.get(\"http://qt-api.tristanchanning.com:8070/api/artist/\" + artistId)\r\n                    .map(this.extractData)\r\n                    .catch(this.handleError);\r\n        }).concatAll();\r\n    }\r\n\r\n    getAlbum(id: string): Observable<Album[]>  {\r\n        return this.http.get(\"http://qt-api.tristanchanning.com:8070/api/albumbyid/\" + id)\r\n                    .map(this.extractData)\r\n                    .catch(this.handleError);\r\n    }\r\n\r\n    private extractData(response: Response) {\r\n        let body = response.json();\r\n        return body.Data || {};\r\n    }\r\n\r\n\r\n\r\n    private handleError(error: any) {\r\n        let errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - $(error.statusText)` : \"Server error\";\r\n        console.log(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/quantone.service.ts\n **/","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response, URLSearchParams } from \"@angular/http\";\r\nimport { DomSanitizationService, SafeUrl } from '@angular/platform-browser';\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { Artist } from \"./model/artist\";\r\nimport { Album } from \"./model/album\";\r\nimport { SpotifyArtist } from \"./model/spotifyArtist\";\r\nimport { SpotifyAlbum } from \"./model/spotifyAlbum\";\r\nimport { SpotifyAlbums } from \"./model/spotifyAlbums\";\r\nimport { Track } from \"./model/track\";\r\nimport { SearchQuery } from \"./model/searchQuery\";\r\nimport { ArtistSearchQuery } from \"./model/artistSearchQuery\";\r\n\r\n@Injectable()\r\nexport class SpotifyService {\r\n    constructor(private http: Http, private sanitiser: DomSanitizationService) {}\r\n    private spotifyUrl = \"https://api.spotify.com/v1/\";\r\n    private spotifyAlbums: SpotifyAlbums = new SpotifyAlbums(0, []);\r\n    public perPage: number = 20;\r\n\r\n    getTotal() {\r\n        return this.spotifyAlbums.total;\r\n    }\r\n\r\n    getAlbums(query: SearchQuery): Observable<SpotifyAlbum[]> {\r\n        if (query.offset === 0) {\r\n             this.spotifyAlbums = new SpotifyAlbums(0, []);\r\n        }\r\n        return this.getAlbumIds(query)\r\n            .map(albumIds => {\r\n                this.spotifyAlbums.total = albumIds.total;\r\n                if (albumIds.total === 0) {\r\n                    return Observable.of(new Array<SpotifyAlbum>());\r\n                }\r\n            return this.getAlbumsByIds(albumIds.albums.map(album => album.id))\r\n                .map(\r\n                    albums => {\r\n                        if (albums.length > 0) {\r\n                            albums.forEach(album => {\r\n                                let tracks: Track[] = [];\r\n                                album.tracks.items.forEach(track => {\r\n                                    tracks.push(new Track(track.id, track.name, track.uri, \"\", \"\", \"\", \"\", \"\"));\r\n                                });\r\n                                this.spotifyAlbums.albums.push(new SpotifyAlbum(album.id, album.name, tracks, album.artists, album.release_date, album.images, album.copyrights, album.popularity, this.getUnsanitisedUrl(album.uri)));\r\n                            });\r\n                            return this.spotifyAlbums.albums;\r\n                            // .sort((a, b) => {\r\n                            //     return +b.popularity - +a.popularity;\r\n                            // });\r\n                        }\r\n                    }\r\n                );\r\n            })\r\n            .concatAll();\r\n    }\r\n\r\n    getAlbumIds(query: SearchQuery): Observable<SpotifyAlbums> {\r\n        let label = query.label;\r\n        if (!!label && label.length > 2) {\r\n            label = \" label:\\\"\" + label + \"\\\"\";\r\n        } else {\r\n            label = \"\";\r\n        }\r\n        let year = query.year;\r\n        if (!!year && year.length > 2) {\r\n            year = \" year:\" + year;\r\n        } else {\r\n            year = \"\";\r\n        }\r\n        let fullQuery: string = \"?q=\" + query.query + label + year + \"&type=album&offset=\" + query.offset + \"&limit=\" + this.perPage + \"&market=GB\";\r\n\r\n        return this.http.get(this.spotifyUrl + \"search\" + fullQuery)\r\n            .map(this.extractAlbumIdData)\r\n            .catch(this.handleError);\r\n    }\r\n    getArtistAlbumIds(query: ArtistSearchQuery): Observable<SpotifyAlbums> {\r\n        return this.http.get(this.spotifyUrl + \"artists/\" + query.id + '/albums?album_type=album,single&limit=' + this.perPage + '&offset=' + query.offset + '&market=GB')\r\n            .map(this.extractArtistAlbumIdData)\r\n            .catch(this.handleError);\r\n    }\r\n    private extractArtistAlbumIdData(response: Response) {\r\n        let body = response.json();\r\n        return new SpotifyAlbums(body.total, body.items) || {};\r\n    }\r\n    private handleAlbumIdError(error: any) {\r\n        let errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - $(error.statusText)` : \"Server error\";\r\n        return Observable.throw(errMsg);\r\n    }\r\n\r\n    private extractAlbumIdData(response: Response) {\r\n        let body = response.json();\r\n        return new SpotifyAlbums(body.albums.total, body.albums.items) || {};\r\n    }\r\n\r\n    getAlbumsByIds(albumIds: Array<string>): Observable<SpotifyAlbum[]> {\r\n        let params = new URLSearchParams();\r\n        params.set(\"ids\", albumIds.join(\",\"));\r\n\r\n        return this.http.get(this.spotifyUrl + \"albums\", { search: params })\r\n            .map(this.extractAlbumData)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private extractAlbumData(response: Response) {\r\n        let body = response.json();\r\n        return body.albums || {};\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        let errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - $(error.statusText)` : \"Server error\";\r\n        console.log(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\r\n    \r\n    getArtistAlbums(query: ArtistSearchQuery): Observable<SpotifyAlbum[]> {\r\n        if (query.offset === 0) {\r\n             this.spotifyAlbums = new SpotifyAlbums(0, []);\r\n        }\r\n        return this.getArtistAlbumIds(query)\r\n            .map(albumIds => {\r\n                this.spotifyAlbums.total = albumIds.total;\r\n                if (albumIds.total === 0) {\r\n                    return Observable.of(new Array<SpotifyAlbum>());\r\n                }\r\n                return this.getAlbumsByIds(albumIds.albums.map(album => album.id))\r\n                .map(\r\n                    albums => {\r\n                        if (albums.length > 0) {\r\n                            albums.forEach(album => {\r\n                                let tracks: Track[] = [];\r\n                                album.tracks.items.forEach(track => {\r\n                                    tracks.push(new Track(track.id, track.name, track.uri, \"\", \"\", \"\", \"\", \"\"));\r\n                                });\r\n                                this.spotifyAlbums.albums.push(new SpotifyAlbum(album.id, album.name, tracks, album.artists, album.release_date, album.images, album.copyrights, album.popularity, this.getUnsanitisedUrl(album.uri)));\r\n                            });\r\n                            return this.spotifyAlbums.albums.sort((a, b) => {\r\n                                return +b.popularity - +a.popularity;\r\n                            });\r\n                        }\r\n                    }\r\n                );\r\n            })\r\n            .concatAll();\r\n    }\r\n    // private _neverGonnaGiveYouUp() {\r\n    //     return new SpotifyAlbums(0, [new SpotifyAlbum(\"6Cgd6xYLzcC6wdtuuMlyiS\", null, [], [], null, [], [], null, null)]);\r\n    // }\r\n    updateAlbum(spotifyAlbum: SpotifyAlbum, albumResult: Album[]){\r\n        spotifyAlbum.tracksLoaded = true;\r\n        if (albumResult && albumResult.length > 0) {\r\n            let tracks = albumResult[0].Tracks;\r\n            spotifyAlbum.recordings.forEach(spotifyTrack => {\r\n                tracks.forEach(track => {\r\n                    if (track.SpotifyId === spotifyTrack.Id || track.Title.toLowerCase() === spotifyTrack.Title.toLowerCase()) {\r\n                    spotifyTrack.Bpm = track.Bpm;\r\n                    spotifyTrack.Duration = track.Duration;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    getArtist(id: string): Observable<Artist> {\r\n        return this.http.get(this.spotifyUrl + \"artists/\" + id)\r\n            .map(this.extractArtistData)\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private extractArtistData(response: Response) {\r\n        let artist = response.json();\r\n        if(!!artist) {\r\n            let newArtist = new Artist(artist.id, artist.name, '', artist.images);\r\n            return newArtist;\r\n        }\r\n\r\n        return {};\r\n    }\r\n\r\n    private getUnsanitisedUrl(url: string): SafeUrl {\r\n        return this.sanitiser.bypassSecurityTrustUrl(url);\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/spotify.service.ts\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar control_container_1 = require('./control_container');\nvar shared_1 = require('./shared');\n/**\n * This is a base class for code shared between {@link NgModelGroup} and {@link FormGroupName}.\n *\n * @experimental\n */\nvar AbstractFormGroupDirective = (function (_super) {\n    __extends(AbstractFormGroupDirective, _super);\n    function AbstractFormGroupDirective() {\n        _super.apply(this, arguments);\n    }\n    AbstractFormGroupDirective.prototype.ngOnInit = function () {\n        this._checkParentType();\n        this.formDirective.addFormGroup(this);\n    };\n    AbstractFormGroupDirective.prototype.ngOnDestroy = function () { this.formDirective.removeFormGroup(this); };\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n        /**\n         * Get the {@link FormGroup} backing this binding.\n         */\n        get: function () { return this.formDirective.getFormGroup(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n        /**\n         * Get the path to this control group.\n         */\n        get: function () { return shared_1.controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n        /**\n         * Get the {@link Form} to which this group belongs.\n         */\n        get: function () { return this._parent.formDirective; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n        get: function () { return shared_1.composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n        get: function () { return shared_1.composeAsyncValidators(this._asyncValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    AbstractFormGroupDirective.prototype._checkParentType = function () { };\n    return AbstractFormGroupDirective;\n}(control_container_1.ControlContainer));\nexports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n//# sourceMappingURL=abstract_form_group_directive.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/abstract_form_group_directive.js\n ** module id = 119\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar async_1 = require('../facade/async');\nvar collection_1 = require('../facade/collection');\nvar lang_1 = require('../facade/lang');\nvar model_1 = require('../model');\nvar validators_1 = require('../validators');\nvar control_container_1 = require('./control_container');\nvar shared_1 = require('./shared');\nexports.formDirectiveProvider = {\n    provide: control_container_1.ControlContainer,\n    useExisting: core_1.forwardRef(function () { return NgForm; })\n};\nvar resolvedPromise = Promise.resolve(null);\nvar NgForm = (function (_super) {\n    __extends(NgForm, _super);\n    function NgForm(validators, asyncValidators) {\n        _super.call(this);\n        this._submitted = false;\n        this.ngSubmit = new async_1.EventEmitter();\n        this.form = new model_1.FormGroup({}, null, shared_1.composeValidators(validators), shared_1.composeAsyncValidators(asyncValidators));\n    }\n    Object.defineProperty(NgForm.prototype, \"submitted\", {\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"formDirective\", {\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"control\", {\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"path\", {\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgForm.prototype, \"controls\", {\n        get: function () { return this.form.controls; },\n        enumerable: true,\n        configurable: true\n    });\n    NgForm.prototype.addControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var container = _this._findContainer(dir.path);\n            dir._control = container.registerControl(dir.name, dir.control);\n            shared_1.setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    NgForm.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n    NgForm.prototype.removeControl = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var container = _this._findContainer(dir.path);\n            if (lang_1.isPresent(container)) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    NgForm.prototype.addFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var container = _this._findContainer(dir.path);\n            var group = new model_1.FormGroup({});\n            shared_1.setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    };\n    NgForm.prototype.removeFormGroup = function (dir) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var container = _this._findContainer(dir.path);\n            if (lang_1.isPresent(container)) {\n                container.removeControl(dir.name);\n            }\n        });\n    };\n    NgForm.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n    NgForm.prototype.updateModel = function (dir, value) {\n        var _this = this;\n        resolvedPromise.then(function () {\n            var ctrl = _this.form.get(dir.path);\n            ctrl.setValue(value);\n        });\n    };\n    NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n    NgForm.prototype.onSubmit = function () {\n        this._submitted = true;\n        this.ngSubmit.emit(null);\n        return false;\n    };\n    NgForm.prototype.onReset = function () { this.form.reset(); };\n    /** @internal */\n    NgForm.prototype._findContainer = function (path) {\n        path.pop();\n        return collection_1.ListWrapper.isEmpty(path) ? this.form : this.form.get(path);\n    };\n    /** @nocollapse */\n    NgForm.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                    providers: [exports.formDirectiveProvider],\n                    host: { '(submit)': 'onSubmit()', '(reset)': 'onReset()' },\n                    outputs: ['ngSubmit'],\n                    exportAs: 'ngForm'\n                },] },\n    ];\n    /** @nocollapse */\n    NgForm.ctorParameters = [\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_ASYNC_VALIDATORS,] },] },\n    ];\n    return NgForm;\n}(control_container_1.ControlContainer));\nexports.NgForm = NgForm;\n//# sourceMappingURL=ng_form.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/ng_form.js\n ** module id = 120\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar async_1 = require('../../facade/async');\nvar collection_1 = require('../../facade/collection');\nvar lang_1 = require('../../facade/lang');\nvar validators_1 = require('../../validators');\nvar control_container_1 = require('../control_container');\nvar reactive_errors_1 = require('../reactive_errors');\nvar shared_1 = require('../shared');\nexports.formDirectiveProvider = {\n    provide: control_container_1.ControlContainer,\n    useExisting: core_1.forwardRef(function () { return FormGroupDirective; })\n};\nvar FormGroupDirective = (function (_super) {\n    __extends(FormGroupDirective, _super);\n    function FormGroupDirective(_validators, _asyncValidators) {\n        _super.call(this);\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        this._submitted = false;\n        this.directives = [];\n        this.form = null;\n        this.ngSubmit = new async_1.EventEmitter();\n    }\n    FormGroupDirective.prototype.ngOnChanges = function (changes) {\n        this._checkFormPresent();\n        if (collection_1.StringMapWrapper.contains(changes, 'form')) {\n            var sync = shared_1.composeValidators(this._validators);\n            this.form.validator = validators_1.Validators.compose([this.form.validator, sync]);\n            var async = shared_1.composeAsyncValidators(this._asyncValidators);\n            this.form.asyncValidator = validators_1.Validators.composeAsync([this.form.asyncValidator, async]);\n            this.form.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        this._updateDomValue();\n    };\n    Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n        get: function () { return this._submitted; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n        get: function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    FormGroupDirective.prototype.addControl = function (dir) {\n        var ctrl = this.form.get(dir.path);\n        shared_1.setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n    };\n    FormGroupDirective.prototype.getControl = function (dir) { return this.form.get(dir.path); };\n    FormGroupDirective.prototype.removeControl = function (dir) { collection_1.ListWrapper.remove(this.directives, dir); };\n    FormGroupDirective.prototype.addFormGroup = function (dir) {\n        var ctrl = this.form.get(dir.path);\n        shared_1.setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n    FormGroupDirective.prototype.getFormGroup = function (dir) { return this.form.get(dir.path); };\n    FormGroupDirective.prototype.addFormArray = function (dir) {\n        var ctrl = this.form.get(dir.path);\n        shared_1.setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    };\n    FormGroupDirective.prototype.removeFormArray = function (dir) { };\n    FormGroupDirective.prototype.getFormArray = function (dir) { return this.form.get(dir.path); };\n    FormGroupDirective.prototype.updateModel = function (dir, value) {\n        var ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n    };\n    FormGroupDirective.prototype.onSubmit = function () {\n        this._submitted = true;\n        this.ngSubmit.emit(null);\n        return false;\n    };\n    FormGroupDirective.prototype.onReset = function () { this.form.reset(); };\n    /** @internal */\n    FormGroupDirective.prototype._updateDomValue = function () {\n        var _this = this;\n        this.directives.forEach(function (dir) {\n            var ctrl = _this.form.get(dir.path);\n            dir.valueAccessor.writeValue(ctrl.value);\n        });\n    };\n    FormGroupDirective.prototype._checkFormPresent = function () {\n        if (lang_1.isBlank(this.form)) {\n            reactive_errors_1.ReactiveErrors.missingFormException();\n        }\n    };\n    /** @nocollapse */\n    FormGroupDirective.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[formGroup]',\n                    providers: [exports.formDirectiveProvider],\n                    host: { '(submit)': 'onSubmit()', '(reset)': 'onReset()' },\n                    exportAs: 'ngForm'\n                },] },\n    ];\n    /** @nocollapse */\n    FormGroupDirective.ctorParameters = [\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_ASYNC_VALIDATORS,] },] },\n    ];\n    /** @nocollapse */\n    FormGroupDirective.propDecorators = {\n        'form': [{ type: core_1.Input, args: ['formGroup',] },],\n        'ngSubmit': [{ type: core_1.Output },],\n    };\n    return FormGroupDirective;\n}(control_container_1.ControlContainer));\nexports.FormGroupDirective = FormGroupDirective;\n//# sourceMappingURL=form_group_directive.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/reactive_directives/form_group_directive.js\n ** module id = 121\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar validators_1 = require('../../validators');\nvar abstract_form_group_directive_1 = require('../abstract_form_group_directive');\nvar control_container_1 = require('../control_container');\nvar reactive_errors_1 = require('../reactive_errors');\nvar shared_1 = require('../shared');\nvar form_group_directive_1 = require('./form_group_directive');\nexports.formGroupNameProvider = {\n    provide: control_container_1.ControlContainer,\n    useExisting: core_1.forwardRef(function () { return FormGroupName; })\n};\nvar FormGroupName = (function (_super) {\n    __extends(FormGroupName, _super);\n    function FormGroupName(parent, validators, asyncValidators) {\n        _super.call(this);\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /** @internal */\n    FormGroupName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            reactive_errors_1.ReactiveErrors.groupParentException();\n        }\n    };\n    /** @nocollapse */\n    FormGroupName.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[formGroupName]', providers: [exports.formGroupNameProvider] },] },\n    ];\n    /** @nocollapse */\n    FormGroupName.ctorParameters = [\n        { type: control_container_1.ControlContainer, decorators: [{ type: core_1.Optional }, { type: core_1.Host }, { type: core_1.SkipSelf },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_ASYNC_VALIDATORS,] },] },\n    ];\n    /** @nocollapse */\n    FormGroupName.propDecorators = {\n        'name': [{ type: core_1.Input, args: ['formGroupName',] },],\n    };\n    return FormGroupName;\n}(abstract_form_group_directive_1.AbstractFormGroupDirective));\nexports.FormGroupName = FormGroupName;\nexports.formArrayNameProvider = {\n    provide: control_container_1.ControlContainer,\n    useExisting: core_1.forwardRef(function () { return FormArrayName; })\n};\nvar FormArrayName = (function (_super) {\n    __extends(FormArrayName, _super);\n    function FormArrayName(parent, validators, asyncValidators) {\n        _super.call(this);\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    FormArrayName.prototype.ngOnInit = function () {\n        this._checkParentType();\n        this.formDirective.addFormArray(this);\n    };\n    FormArrayName.prototype.ngOnDestroy = function () { this.formDirective.removeFormArray(this); };\n    Object.defineProperty(FormArrayName.prototype, \"control\", {\n        get: function () { return this.formDirective.getFormArray(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n        get: function () { return this._parent.formDirective; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"path\", {\n        get: function () { return shared_1.controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"validator\", {\n        get: function () { return shared_1.composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n        get: function () { return shared_1.composeAsyncValidators(this._asyncValidators); },\n        enumerable: true,\n        configurable: true\n    });\n    FormArrayName.prototype._checkParentType = function () {\n        if (_hasInvalidParent(this._parent)) {\n            reactive_errors_1.ReactiveErrors.arrayParentException();\n        }\n    };\n    /** @nocollapse */\n    FormArrayName.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[formArrayName]', providers: [exports.formArrayNameProvider] },] },\n    ];\n    /** @nocollapse */\n    FormArrayName.ctorParameters = [\n        { type: control_container_1.ControlContainer, decorators: [{ type: core_1.Optional }, { type: core_1.Host }, { type: core_1.SkipSelf },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_ASYNC_VALIDATORS,] },] },\n    ];\n    /** @nocollapse */\n    FormArrayName.propDecorators = {\n        'name': [{ type: core_1.Input, args: ['formArrayName',] },],\n    };\n    return FormArrayName;\n}(control_container_1.ControlContainer));\nexports.FormArrayName = FormArrayName;\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof form_group_directive_1.FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n//# sourceMappingURL=form_group_name.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/reactive_directives/form_group_name.js\n ** module id = 122\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar control_value_accessor_1 = require('./control_value_accessor');\nexports.CHECKBOX_VALUE_ACCESSOR = {\n    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return CheckboxControlValueAccessor; }),\n    multi: true\n};\nvar CheckboxControlValueAccessor = (function () {\n    function CheckboxControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n    };\n    CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /** @nocollapse */\n    CheckboxControlValueAccessor.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                    host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                    providers: [exports.CHECKBOX_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    CheckboxControlValueAccessor.ctorParameters = [\n        { type: core_1.Renderer, },\n        { type: core_1.ElementRef, },\n    ];\n    return CheckboxControlValueAccessor;\n}());\nexports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n//# sourceMappingURL=checkbox_value_accessor.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/checkbox_value_accessor.js\n ** module id = 166\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar lang_1 = require('../facade/lang');\nvar control_value_accessor_1 = require('./control_value_accessor');\nexports.DEFAULT_VALUE_ACCESSOR = {\n    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return DefaultValueAccessor; }),\n    multi: true\n};\nvar DefaultValueAccessor = (function () {\n    function DefaultValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    DefaultValueAccessor.prototype.writeValue = function (value) {\n        var normalizedValue = lang_1.isBlank(value) ? '' : value;\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n    DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /** @nocollapse */\n    DefaultValueAccessor.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                    // TODO: vsavkin replace the above selector with the one below it once\n                    // https://github.com/angular/angular/issues/3011 is implemented\n                    // selector: '[ngControl],[ngModel],[ngFormControl]',\n                    host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [exports.DEFAULT_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    DefaultValueAccessor.ctorParameters = [\n        { type: core_1.Renderer, },\n        { type: core_1.ElementRef, },\n    ];\n    return DefaultValueAccessor;\n}());\nexports.DefaultValueAccessor = DefaultValueAccessor;\n//# sourceMappingURL=default_value_accessor.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/default_value_accessor.js\n ** module id = 167\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar validators_1 = require('../validators');\nvar abstract_form_group_directive_1 = require('./abstract_form_group_directive');\nvar control_container_1 = require('./control_container');\nvar ng_form_1 = require('./ng_form');\nvar template_driven_errors_1 = require('./template_driven_errors');\nexports.modelGroupProvider = {\n    provide: control_container_1.ControlContainer,\n    useExisting: core_1.forwardRef(function () { return NgModelGroup; })\n};\nvar NgModelGroup = (function (_super) {\n    __extends(NgModelGroup, _super);\n    function NgModelGroup(parent, validators, asyncValidators) {\n        _super.call(this);\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /** @internal */\n    NgModelGroup.prototype._checkParentType = function () {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof ng_form_1.NgForm)) {\n            template_driven_errors_1.TemplateDrivenErrors.modelGroupParentException();\n        }\n    };\n    /** @nocollapse */\n    NgModelGroup.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[ngModelGroup]', providers: [exports.modelGroupProvider], exportAs: 'ngModelGroup' },] },\n    ];\n    /** @nocollapse */\n    NgModelGroup.ctorParameters = [\n        { type: control_container_1.ControlContainer, decorators: [{ type: core_1.Host }, { type: core_1.SkipSelf },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_ASYNC_VALIDATORS,] },] },\n    ];\n    /** @nocollapse */\n    NgModelGroup.propDecorators = {\n        'name': [{ type: core_1.Input, args: ['ngModelGroup',] },],\n    };\n    return NgModelGroup;\n}(abstract_form_group_directive_1.AbstractFormGroupDirective));\nexports.NgModelGroup = NgModelGroup;\n//# sourceMappingURL=ng_model_group.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/ng_model_group.js\n ** module id = 168\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar collection_1 = require('../facade/collection');\nvar exceptions_1 = require('../facade/exceptions');\nvar lang_1 = require('../facade/lang');\nvar control_value_accessor_1 = require('./control_value_accessor');\nvar ng_control_1 = require('./ng_control');\nexports.RADIO_VALUE_ACCESSOR = {\n    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return RadioControlValueAccessor; }),\n    multi: true\n};\nvar RadioControlRegistry = (function () {\n    function RadioControlRegistry() {\n        this._accessors = [];\n    }\n    RadioControlRegistry.prototype.add = function (control, accessor) {\n        this._accessors.push([control, accessor]);\n    };\n    RadioControlRegistry.prototype.remove = function (accessor) {\n        var indexToRemove = -1;\n        for (var i = 0; i < this._accessors.length; ++i) {\n            if (this._accessors[i][1] === accessor) {\n                indexToRemove = i;\n            }\n        }\n        collection_1.ListWrapper.removeAt(this._accessors, indexToRemove);\n    };\n    RadioControlRegistry.prototype.select = function (accessor) {\n        var _this = this;\n        this._accessors.forEach(function (c) {\n            if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    };\n    RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0].control.root === accessor._control.control.root &&\n            controlPair[1].name === accessor.name;\n    };\n    /** @nocollapse */\n    RadioControlRegistry.decorators = [\n        { type: core_1.Injectable },\n    ];\n    return RadioControlRegistry;\n}());\nexports.RadioControlRegistry = RadioControlRegistry;\nvar RadioControlValueAccessor = (function () {\n    function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        this.onChange = function () { };\n        this.onTouched = function () { };\n    }\n    RadioControlValueAccessor.prototype.ngOnInit = function () {\n        this._control = this._injector.get(ng_control_1.NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    };\n    RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n    RadioControlValueAccessor.prototype.writeValue = function (value) {\n        this._state = value === this.value;\n        if (lang_1.isPresent(value)) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n        }\n    };\n    RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this._fn = fn;\n        this.onChange = function () {\n            fn(_this.value);\n            _this._registry.select(_this);\n        };\n    };\n    RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n    RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    RadioControlValueAccessor.prototype._checkName = function () {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    };\n    RadioControlValueAccessor.prototype._throwNameError = function () {\n        throw new exceptions_1.BaseException(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n    };\n    /** @nocollapse */\n    RadioControlValueAccessor.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                    host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                    providers: [exports.RADIO_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    RadioControlValueAccessor.ctorParameters = [\n        { type: core_1.Renderer, },\n        { type: core_1.ElementRef, },\n        { type: RadioControlRegistry, },\n        { type: core_1.Injector, },\n    ];\n    /** @nocollapse */\n    RadioControlValueAccessor.propDecorators = {\n        'name': [{ type: core_1.Input },],\n        'formControlName': [{ type: core_1.Input },],\n        'value': [{ type: core_1.Input },],\n    };\n    return RadioControlValueAccessor;\n}());\nexports.RadioControlValueAccessor = RadioControlValueAccessor;\n//# sourceMappingURL=radio_control_value_accessor.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/radio_control_value_accessor.js\n ** module id = 169\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar collection_1 = require('../facade/collection');\nvar lang_1 = require('../facade/lang');\nvar control_value_accessor_1 = require('./control_value_accessor');\nexports.SELECT_VALUE_ACCESSOR = {\n    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return SelectControlValueAccessor; }),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (lang_1.isBlank(id))\n        return \"\" + value;\n    if (!lang_1.isPrimitive(value))\n        value = 'Object';\n    return lang_1.StringWrapper.slice(id + \": \" + value, 0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\nvar SelectControlValueAccessor = (function () {\n    function SelectControlValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    SelectControlValueAccessor.prototype.writeValue = function (value) {\n        this.value = value;\n        var valueString = _buildValueString(this._getOptionId(value), value);\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n    };\n    SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (valueString) {\n            _this.value = valueString;\n            fn(_this._getOptionValue(valueString));\n        };\n    };\n    SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /** @internal */\n    SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n    /** @internal */\n    SelectControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = collection_1.MapWrapper.keys(this._optionMap); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (lang_1.looseIdentical(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    };\n    /** @internal */\n    SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var value = this._optionMap.get(_extractId(valueString));\n        return lang_1.isPresent(value) ? value : valueString;\n    };\n    /** @nocollapse */\n    SelectControlValueAccessor.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                    host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                    providers: [exports.SELECT_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    SelectControlValueAccessor.ctorParameters = [\n        { type: core_1.Renderer, },\n        { type: core_1.ElementRef, },\n    ];\n    return SelectControlValueAccessor;\n}());\nexports.SelectControlValueAccessor = SelectControlValueAccessor;\nvar NgSelectOption = (function () {\n    function NgSelectOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (lang_1.isPresent(this._select))\n            this.id = this._select._registerOption();\n    }\n    Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._select._optionMap.set(this.id, value);\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectOption.prototype, \"value\", {\n        set: function (value) {\n            this._setElementValue(value);\n            if (lang_1.isPresent(this._select))\n                this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    NgSelectOption.prototype._setElementValue = function (value) {\n        this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n    };\n    NgSelectOption.prototype.ngOnDestroy = function () {\n        if (lang_1.isPresent(this._select)) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    /** @nocollapse */\n    NgSelectOption.decorators = [\n        { type: core_1.Directive, args: [{ selector: 'option' },] },\n    ];\n    /** @nocollapse */\n    NgSelectOption.ctorParameters = [\n        { type: core_1.ElementRef, },\n        { type: core_1.Renderer, },\n        { type: SelectControlValueAccessor, decorators: [{ type: core_1.Optional }, { type: core_1.Host },] },\n    ];\n    /** @nocollapse */\n    NgSelectOption.propDecorators = {\n        'ngValue': [{ type: core_1.Input, args: ['ngValue',] },],\n        'value': [{ type: core_1.Input, args: ['value',] },],\n    };\n    return NgSelectOption;\n}());\nexports.NgSelectOption = NgSelectOption;\n//# sourceMappingURL=select_control_value_accessor.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/select_control_value_accessor.js\n ** module id = 170\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar collection_1 = require('../facade/collection');\nvar lang_1 = require('../facade/lang');\nvar control_value_accessor_1 = require('./control_value_accessor');\nexports.SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n    multi: true\n};\nfunction _buildValueString(id, value) {\n    if (lang_1.isBlank(id))\n        return \"\" + value;\n    if (lang_1.isString(value))\n        value = \"'\" + value + \"'\";\n    if (!lang_1.isPrimitive(value))\n        value = 'Object';\n    return lang_1.StringWrapper.slice(id + \": \" + value, 0, 50);\n}\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nvar HTMLCollection = (function () {\n    function HTMLCollection() {\n    }\n    return HTMLCollection;\n}());\nvar SelectMultipleControlValueAccessor = (function () {\n    function SelectMultipleControlValueAccessor() {\n        /** @internal */\n        this._optionMap = new Map();\n        /** @internal */\n        this._idCounter = 0;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n        var _this = this;\n        this.value = value;\n        if (value == null)\n            return;\n        var values = value;\n        // convert values to ids\n        var ids = values.map(function (v) { return _this._getOptionId(v); });\n        this._optionMap.forEach(function (opt, o) { opt._setSelected(ids.indexOf(o.toString()) > -1); });\n    };\n    SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n        var _this = this;\n        this.onChange = function (_) {\n            var selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                var options = _.selectedOptions;\n                for (var i = 0; i < options.length; i++) {\n                    var opt = options.item(i);\n                    var val = _this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            else {\n                var options = _.options;\n                for (var i = 0; i < options.length; i++) {\n                    var opt = options.item(i);\n                    if (opt.selected) {\n                        var val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            fn(selected);\n        };\n    };\n    SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /** @internal */\n    SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n        var id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    };\n    /** @internal */\n    SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n        for (var _i = 0, _a = collection_1.MapWrapper.keys(this._optionMap); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (lang_1.looseIdentical(this._optionMap.get(id)._value, value))\n                return id;\n        }\n        return null;\n    };\n    /** @internal */\n    SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n        var opt = this._optionMap.get(_extractId(valueString));\n        return lang_1.isPresent(opt) ? opt._value : valueString;\n    };\n    /** @nocollapse */\n    SelectMultipleControlValueAccessor.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                    host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                    providers: [exports.SELECT_MULTIPLE_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    SelectMultipleControlValueAccessor.ctorParameters = [];\n    return SelectMultipleControlValueAccessor;\n}());\nexports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\nvar NgSelectMultipleOption = (function () {\n    function NgSelectMultipleOption(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (lang_1.isPresent(this._select)) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n        set: function (value) {\n            if (this._select == null)\n                return;\n            this._value = value;\n            this._setElementValue(_buildValueString(this.id, value));\n            this._select.writeValue(this._select.value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n        set: function (value) {\n            if (lang_1.isPresent(this._select)) {\n                this._value = value;\n                this._setElementValue(_buildValueString(this.id, value));\n                this._select.writeValue(this._select.value);\n            }\n            else {\n                this._setElementValue(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    NgSelectMultipleOption.prototype._setElementValue = function (value) {\n        this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n    };\n    /** @internal */\n    NgSelectMultipleOption.prototype._setSelected = function (selected) {\n        this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n    };\n    NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n        if (lang_1.isPresent(this._select)) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    };\n    /** @nocollapse */\n    NgSelectMultipleOption.decorators = [\n        { type: core_1.Directive, args: [{ selector: 'option' },] },\n    ];\n    /** @nocollapse */\n    NgSelectMultipleOption.ctorParameters = [\n        { type: core_1.ElementRef, },\n        { type: core_1.Renderer, },\n        { type: SelectMultipleControlValueAccessor, decorators: [{ type: core_1.Optional }, { type: core_1.Host },] },\n    ];\n    /** @nocollapse */\n    NgSelectMultipleOption.propDecorators = {\n        'ngValue': [{ type: core_1.Input, args: ['ngValue',] },],\n        'value': [{ type: core_1.Input, args: ['value',] },],\n    };\n    return NgSelectMultipleOption;\n}());\nexports.NgSelectMultipleOption = NgSelectMultipleOption;\nexports.SELECT_DIRECTIVES = [SelectMultipleControlValueAccessor, NgSelectMultipleOption];\n//# sourceMappingURL=select_multiple_control_value_accessor.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/select_multiple_control_value_accessor.js\n ** module id = 171\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar PromiseObservable_1 = require('rxjs/observable/PromiseObservable');\nvar shared_1 = require('./directives/shared');\nvar async_1 = require('./facade/async');\nvar collection_1 = require('./facade/collection');\nvar exceptions_1 = require('./facade/exceptions');\nvar lang_1 = require('./facade/lang');\n/**\n * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n */\nexports.VALID = 'VALID';\n/**\n * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n */\nexports.INVALID = 'INVALID';\n/**\n * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n * errors are not yet available for the input value.\n */\nexports.PENDING = 'PENDING';\nfunction isControl(control) {\n    return control instanceof AbstractControl;\n}\nexports.isControl = isControl;\nfunction _find(control, path, delimiter) {\n    if (lang_1.isBlank(path))\n        return null;\n    if (!(path instanceof Array)) {\n        path = path.split(delimiter);\n    }\n    if (path instanceof Array && collection_1.ListWrapper.isEmpty(path))\n        return null;\n    return path.reduce(function (v, name) {\n        if (v instanceof FormGroup) {\n            return lang_1.isPresent(v.controls[name]) ? v.controls[name] : null;\n        }\n        else if (v instanceof FormArray) {\n            var index = name;\n            return lang_1.isPresent(v.at(index)) ? v.at(index) : null;\n        }\n        else {\n            return null;\n        }\n    }, control);\n}\nfunction toObservable(r) {\n    return lang_1.isPromise(r) ? PromiseObservable_1.PromiseObservable.create(r) : r;\n}\nfunction coerceToValidator(validator) {\n    return Array.isArray(validator) ? shared_1.composeValidators(validator) : validator;\n}\nfunction coerceToAsyncValidator(asyncValidator) {\n    return Array.isArray(asyncValidator) ? shared_1.composeAsyncValidators(asyncValidator) : asyncValidator;\n}\n/**\n * @experimental\n */\nvar AbstractControl = (function () {\n    function AbstractControl(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        this._pristine = true;\n        this._touched = false;\n    }\n    Object.defineProperty(AbstractControl.prototype, \"value\", {\n        get: function () { return this._value; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"status\", {\n        get: function () { return this._status; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valid\", {\n        get: function () { return this._status === exports.VALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n        get: function () { return this._status === exports.INVALID; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"errors\", {\n        /**\n         * Returns the errors of this control.\n         */\n        get: function () { return this._errors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n        get: function () { return this._pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n        get: function () { return !this.pristine; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"touched\", {\n        get: function () { return this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n        get: function () { return !this._touched; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n        get: function () { return this._valueChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n        get: function () { return this._statusChanges; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControl.prototype, \"pending\", {\n        get: function () { return this._status == exports.PENDING; },\n        enumerable: true,\n        configurable: true\n    });\n    AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    };\n    AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n    AbstractControl.prototype.setValidators = function (newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    };\n    AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n    AbstractControl.prototype.markAsTouched = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        onlySelf = lang_1.normalizeBool(onlySelf);\n        this._touched = true;\n        if (lang_1.isPresent(this._parent) && !onlySelf) {\n            this._parent.markAsTouched({ onlySelf: onlySelf });\n        }\n    };\n    AbstractControl.prototype.markAsDirty = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        onlySelf = lang_1.normalizeBool(onlySelf);\n        this._pristine = false;\n        if (lang_1.isPresent(this._parent) && !onlySelf) {\n            this._parent.markAsDirty({ onlySelf: onlySelf });\n        }\n    };\n    AbstractControl.prototype.markAsPristine = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._pristine = true;\n        this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n        if (lang_1.isPresent(this._parent) && !onlySelf) {\n            this._parent._updatePristine({ onlySelf: onlySelf });\n        }\n    };\n    AbstractControl.prototype.markAsUntouched = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._touched = false;\n        this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n        if (lang_1.isPresent(this._parent) && !onlySelf) {\n            this._parent._updateTouched({ onlySelf: onlySelf });\n        }\n    };\n    AbstractControl.prototype.markAsPending = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        onlySelf = lang_1.normalizeBool(onlySelf);\n        this._status = exports.PENDING;\n        if (lang_1.isPresent(this._parent) && !onlySelf) {\n            this._parent.markAsPending({ onlySelf: onlySelf });\n        }\n    };\n    AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n    AbstractControl.prototype.updateValueAndValidity = function (_a) {\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n        onlySelf = lang_1.normalizeBool(onlySelf);\n        emitEvent = lang_1.isPresent(emitEvent) ? emitEvent : true;\n        this._updateValue();\n        this._errors = this._runValidator();\n        this._status = this._calculateStatus();\n        if (this._status == exports.VALID || this._status == exports.PENDING) {\n            this._runAsyncValidator(emitEvent);\n        }\n        if (emitEvent) {\n            this._valueChanges.emit(this._value);\n            this._statusChanges.emit(this._status);\n        }\n        if (lang_1.isPresent(this._parent) && !onlySelf) {\n            this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        }\n    };\n    AbstractControl.prototype._runValidator = function () {\n        return lang_1.isPresent(this.validator) ? this.validator(this) : null;\n    };\n    AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n        var _this = this;\n        if (lang_1.isPresent(this.asyncValidator)) {\n            this._status = exports.PENDING;\n            this._cancelExistingSubscription();\n            var obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription = obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n        }\n    };\n    AbstractControl.prototype._cancelExistingSubscription = function () {\n        if (lang_1.isPresent(this._asyncValidationSubscription)) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    };\n    /**\n     * Sets errors on a form control.\n     *\n     * This is used when validations are run not automatically, but manually by the user.\n     *\n     * Calling `setErrors` will also update the validity of the parent control.\n     *\n     * ## Usage\n     *\n     * ```\n     * var login = new FormControl(\"someLogin\");\n     * login.setErrors({\n     *   \"notUnique\": true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({\"notUnique\": true});\n     *\n     * login.updateValue(\"someOtherLogin\");\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     */\n    AbstractControl.prototype.setErrors = function (errors, _a) {\n        var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n        emitEvent = lang_1.isPresent(emitEvent) ? emitEvent : true;\n        this._errors = errors;\n        this._updateControlsErrors(emitEvent);\n    };\n    /**\n     * @deprecated - use get() instead\n     */\n    AbstractControl.prototype.find = function (path) { return _find(this, path, '/'); };\n    AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n    AbstractControl.prototype.getError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        var control = lang_1.isPresent(path) && !collection_1.ListWrapper.isEmpty(path) ? this.find(path) : this;\n        if (lang_1.isPresent(control) && lang_1.isPresent(control._errors)) {\n            return collection_1.StringMapWrapper.get(control._errors, errorCode);\n        }\n        else {\n            return null;\n        }\n    };\n    AbstractControl.prototype.hasError = function (errorCode, path) {\n        if (path === void 0) { path = null; }\n        return lang_1.isPresent(this.getError(errorCode, path));\n    };\n    Object.defineProperty(AbstractControl.prototype, \"root\", {\n        get: function () {\n            var x = this;\n            while (lang_1.isPresent(x._parent)) {\n                x = x._parent;\n            }\n            return x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n        this._status = this._calculateStatus();\n        if (emitEvent) {\n            this._statusChanges.emit(this._status);\n        }\n        if (lang_1.isPresent(this._parent)) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    };\n    /** @internal */\n    AbstractControl.prototype._initObservables = function () {\n        this._valueChanges = new async_1.EventEmitter();\n        this._statusChanges = new async_1.EventEmitter();\n    };\n    AbstractControl.prototype._calculateStatus = function () {\n        if (lang_1.isPresent(this._errors))\n            return exports.INVALID;\n        if (this._anyControlsHaveStatus(exports.PENDING))\n            return exports.PENDING;\n        if (this._anyControlsHaveStatus(exports.INVALID))\n            return exports.INVALID;\n        return exports.VALID;\n    };\n    /** @internal */\n    AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n        return this._anyControls(function (control) { return control.status == status; });\n    };\n    /** @internal */\n    AbstractControl.prototype._anyControlsDirty = function () {\n        return this._anyControls(function (control) { return control.dirty; });\n    };\n    /** @internal */\n    AbstractControl.prototype._anyControlsTouched = function () {\n        return this._anyControls(function (control) { return control.touched; });\n    };\n    /** @internal */\n    AbstractControl.prototype._updatePristine = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._pristine = !this._anyControlsDirty();\n        if (lang_1.isPresent(this._parent) && !onlySelf) {\n            this._parent._updatePristine({ onlySelf: onlySelf });\n        }\n    };\n    /** @internal */\n    AbstractControl.prototype._updateTouched = function (_a) {\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._touched = this._anyControlsTouched();\n        if (lang_1.isPresent(this._parent) && !onlySelf) {\n            this._parent._updateTouched({ onlySelf: onlySelf });\n        }\n    };\n    return AbstractControl;\n}());\nexports.AbstractControl = AbstractControl;\n/**\n * Defines a part of a form that cannot be divided into other controls. `FormControl`s have values\n * and\n * validation state, which is determined by an optional validation function.\n *\n * `FormControl` is one of the three fundamental building blocks used to define forms in Angular,\n * along\n * with {@link FormGroup} and {@link FormArray}.\n *\n * ## Usage\n *\n * By default, a `FormControl` is created for every `<input>` or other form component.\n * With {@link FormControlDirective} or {@link FormGroupDirective} an existing {@link FormControl}\n * can be bound to a DOM element instead. This `FormControl` can be configured with a custom\n * validation function.\n *\n * @experimental\n */\nvar FormControl = (function (_super) {\n    __extends(FormControl, _super);\n    function FormControl(value, validator, asyncValidator) {\n        if (value === void 0) { value = null; }\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n        /** @internal */\n        this._onChange = [];\n        this._value = value;\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        this._initObservables();\n    }\n    /**\n     * Set the value of the form control to `value`.\n     *\n     * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n     * and not its parent component. If `emitEvent` is `true`, this change will cause a\n     * `valueChanges` event on the `FormControl` to be emitted. Both of these options default to\n     * `false`.\n     *\n     * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n     * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n     * specified.\n     *\n     * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n     * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n     */\n    FormControl.prototype.setValue = function (value, _a) {\n        var _this = this;\n        var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n        emitModelToViewChange = lang_1.isPresent(emitModelToViewChange) ? emitModelToViewChange : true;\n        emitViewToModelChange = lang_1.isPresent(emitViewToModelChange) ? emitViewToModelChange : true;\n        this._value = value;\n        if (this._onChange.length && emitModelToViewChange) {\n            this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange); });\n        }\n        this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n    };\n    /**\n     * This function is functionally the same as updateValue() at this level.  It exists for\n     * symmetry with patchValue() on FormGroups and FormArrays, where it does behave differently.\n     */\n    FormControl.prototype.patchValue = function (value, options) {\n        if (options === void 0) { options = {}; }\n        this.setValue(value, options);\n    };\n    /**\n     * @deprecated Please use setValue() instead.\n     */\n    FormControl.prototype.updateValue = function (value, options) {\n        if (options === void 0) { options = {}; }\n        this.setValue(value, options);\n    };\n    FormControl.prototype.reset = function (value, _a) {\n        if (value === void 0) { value = null; }\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this.markAsPristine({ onlySelf: onlySelf });\n        this.markAsUntouched({ onlySelf: onlySelf });\n        this.setValue(value, { onlySelf: onlySelf });\n    };\n    /**\n     * @internal\n     */\n    FormControl.prototype._updateValue = function () { };\n    /**\n     * @internal\n     */\n    FormControl.prototype._anyControls = function (condition) { return false; };\n    /**\n     * Register a listener for change events.\n     */\n    FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n    /**\n     * @internal\n     */\n    FormControl.prototype._forEachChild = function (cb) { };\n    return FormControl;\n}(AbstractControl));\nexports.FormControl = FormControl;\n/**\n * Defines a part of a form, of fixed length, that can contain other controls.\n *\n * A `FormGroup` aggregates the values of each {@link FormControl} in the group.\n * The status of a `FormGroup` depends on the status of its children.\n * If one of the controls in a group is invalid, the entire group is invalid.\n * Similarly, if a control changes its value, the entire group changes as well.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {@link FormControl} and {@link FormArray}. {@link FormArray} can also contain other\n * controls, but is of variable length.\n *\n * ### Example ([live demo](http://plnkr.co/edit/23DESOpbNnBpBHZt1BR4?p=preview))\n *\n * @experimental\n */\nvar FormGroup = (function (_super) {\n    __extends(FormGroup, _super);\n    function FormGroup(controls, optionals, validator, asyncValidator) {\n        if (optionals === void 0) { optionals = null; }\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        _super.call(this, validator, asyncValidator);\n        this.controls = controls;\n        this._optionals = lang_1.isPresent(optionals) ? optionals : {};\n        this._initObservables();\n        this._setParentForControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Register a control with the group's list of controls.\n     */\n    FormGroup.prototype.registerControl = function (name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        return control;\n    };\n    /**\n     * Add a control to this group.\n     */\n    FormGroup.prototype.addControl = function (name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Remove a control from this group.\n     */\n    FormGroup.prototype.removeControl = function (name) {\n        collection_1.StringMapWrapper.delete(this.controls, name);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Mark the named control as non-optional.\n     */\n    FormGroup.prototype.include = function (controlName) {\n        collection_1.StringMapWrapper.set(this._optionals, controlName, true);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Mark the named control as optional.\n     */\n    FormGroup.prototype.exclude = function (controlName) {\n        collection_1.StringMapWrapper.set(this._optionals, controlName, false);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Check whether there is a control with the given name in the group.\n     */\n    FormGroup.prototype.contains = function (controlName) {\n        var c = collection_1.StringMapWrapper.contains(this.controls, controlName);\n        return c && this._included(controlName);\n    };\n    FormGroup.prototype.setValue = function (value, _a) {\n        var _this = this;\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._checkAllValuesPresent(value);\n        collection_1.StringMapWrapper.forEach(value, function (newValue, name) {\n            _this._throwIfControlMissing(name);\n            _this.controls[name].setValue(newValue, { onlySelf: true });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf });\n    };\n    FormGroup.prototype.patchValue = function (value, _a) {\n        var _this = this;\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        collection_1.StringMapWrapper.forEach(value, function (newValue, name) {\n            if (_this.controls[name]) {\n                _this.controls[name].patchValue(newValue, { onlySelf: true });\n            }\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf });\n    };\n    FormGroup.prototype.reset = function (value, _a) {\n        if (value === void 0) { value = {}; }\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._forEachChild(function (control, name) {\n            control.reset(value[name], { onlySelf: true });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf });\n        this._updatePristine({ onlySelf: onlySelf });\n        this._updateTouched({ onlySelf: onlySelf });\n    };\n    /** @internal */\n    FormGroup.prototype._throwIfControlMissing = function (name) {\n        if (!Object.keys(this.controls).length) {\n            throw new exceptions_1.BaseException(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.controls[name]) {\n            throw new exceptions_1.BaseException(\"Cannot find form control with name: \" + name + \".\");\n        }\n    };\n    /** @internal */\n    FormGroup.prototype._forEachChild = function (cb) {\n        collection_1.StringMapWrapper.forEach(this.controls, cb);\n    };\n    /** @internal */\n    FormGroup.prototype._setParentForControls = function () {\n        var _this = this;\n        this._forEachChild(function (control, name) { control.setParent(_this); });\n    };\n    /** @internal */\n    FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n    /** @internal */\n    FormGroup.prototype._anyControls = function (condition) {\n        var _this = this;\n        var res = false;\n        this._forEachChild(function (control, name) {\n            res = res || (_this.contains(name) && condition(control));\n        });\n        return res;\n    };\n    /** @internal */\n    FormGroup.prototype._reduceValue = function () {\n        return this._reduceChildren({}, function (acc, control, name) {\n            acc[name] = control.value;\n            return acc;\n        });\n    };\n    /** @internal */\n    FormGroup.prototype._reduceChildren = function (initValue, fn) {\n        var _this = this;\n        var res = initValue;\n        this._forEachChild(function (control, name) {\n            if (_this._included(name)) {\n                res = fn(res, control, name);\n            }\n        });\n        return res;\n    };\n    /** @internal */\n    FormGroup.prototype._included = function (controlName) {\n        var isOptional = collection_1.StringMapWrapper.contains(this._optionals, controlName);\n        return !isOptional || collection_1.StringMapWrapper.get(this._optionals, controlName);\n    };\n    /** @internal */\n    FormGroup.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, name) {\n            if (value[name] === undefined) {\n                throw new exceptions_1.BaseException(\"Must supply a value for form control with name: '\" + name + \"'.\");\n            }\n        });\n    };\n    return FormGroup;\n}(AbstractControl));\nexports.FormGroup = FormGroup;\n/**\n * Defines a part of a form, of variable length, that can contain other controls.\n *\n * A `FormArray` aggregates the values of each {@link FormControl} in the group.\n * The status of a `FormArray` depends on the status of its children.\n * If one of the controls in a group is invalid, the entire array is invalid.\n * Similarly, if a control changes its value, the entire array changes as well.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with {@link FormControl} and {@link FormGroup}. {@link FormGroup} can also contain\n * other controls, but is of fixed length.\n *\n * ## Adding or removing controls\n *\n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that will result in strange and unexpected behavior such\n * as broken change detection.\n *\n * ### Example ([live demo](http://plnkr.co/edit/23DESOpbNnBpBHZt1BR4?p=preview))\n *\n * @experimental\n */\nvar FormArray = (function (_super) {\n    __extends(FormArray, _super);\n    function FormArray(controls, validator, asyncValidator) {\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        _super.call(this, validator, asyncValidator);\n        this.controls = controls;\n        this._initObservables();\n        this._setParentForControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Get the {@link AbstractControl} at the given `index` in the array.\n     */\n    FormArray.prototype.at = function (index) { return this.controls[index]; };\n    /**\n     * Insert a new {@link AbstractControl} at the end of the array.\n     */\n    FormArray.prototype.push = function (control) {\n        this.controls.push(control);\n        control.setParent(this);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Insert a new {@link AbstractControl} at the given `index` in the array.\n     */\n    FormArray.prototype.insert = function (index, control) {\n        collection_1.ListWrapper.insert(this.controls, index, control);\n        control.setParent(this);\n        this.updateValueAndValidity();\n    };\n    /**\n     * Remove the control at the given `index` in the array.\n     */\n    FormArray.prototype.removeAt = function (index) {\n        collection_1.ListWrapper.removeAt(this.controls, index);\n        this.updateValueAndValidity();\n    };\n    Object.defineProperty(FormArray.prototype, \"length\", {\n        /**\n         * Length of the control array.\n         */\n        get: function () { return this.controls.length; },\n        enumerable: true,\n        configurable: true\n    });\n    FormArray.prototype.setValue = function (value, _a) {\n        var _this = this;\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._checkAllValuesPresent(value);\n        value.forEach(function (newValue, index) {\n            _this._throwIfControlMissing(index);\n            _this.at(index).setValue(newValue, { onlySelf: true });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf });\n    };\n    FormArray.prototype.patchValue = function (value, _a) {\n        var _this = this;\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        value.forEach(function (newValue, index) {\n            if (_this.at(index)) {\n                _this.at(index).patchValue(newValue, { onlySelf: true });\n            }\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf });\n    };\n    FormArray.prototype.reset = function (value, _a) {\n        if (value === void 0) { value = []; }\n        var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n        this._forEachChild(function (control, index) {\n            control.reset(value[index], { onlySelf: true });\n        });\n        this.updateValueAndValidity({ onlySelf: onlySelf });\n        this._updatePristine({ onlySelf: onlySelf });\n        this._updateTouched({ onlySelf: onlySelf });\n    };\n    /** @internal */\n    FormArray.prototype._throwIfControlMissing = function (index) {\n        if (!this.controls.length) {\n            throw new exceptions_1.BaseException(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n        }\n        if (!this.at(index)) {\n            throw new exceptions_1.BaseException(\"Cannot find form control at index \" + index);\n        }\n    };\n    /** @internal */\n    FormArray.prototype._forEachChild = function (cb) {\n        this.controls.forEach(function (control, index) { cb(control, index); });\n    };\n    /** @internal */\n    FormArray.prototype._updateValue = function () { this._value = this.controls.map(function (control) { return control.value; }); };\n    /** @internal */\n    FormArray.prototype._anyControls = function (condition) {\n        return this.controls.some(function (control) { return condition(control); });\n    };\n    /** @internal */\n    FormArray.prototype._setParentForControls = function () {\n        var _this = this;\n        this._forEachChild(function (control) { control.setParent(_this); });\n    };\n    /** @internal */\n    FormArray.prototype._checkAllValuesPresent = function (value) {\n        this._forEachChild(function (control, i) {\n            if (value[i] === undefined) {\n                throw new exceptions_1.BaseException(\"Must supply a value for form control at index: \" + i + \".\");\n            }\n        });\n    };\n    return FormArray;\n}(AbstractControl));\nexports.FormArray = FormArray;\n//# sourceMappingURL=model.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/model.js\n ** module id = 172\n ** module chunks = 2\n **/","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { InfiniteScrollComponent } from './infinite-scroll/infinite-scroll.component';\r\nimport { AlbumComponent } from './album/album.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, RouterModule],\r\n    declarations: [InfiniteScrollComponent, AlbumComponent],\r\n    exports: [CommonModule, RouterModule, InfiniteScrollComponent, AlbumComponent]\r\n})\r\nexport class SharedModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: SharedModule,\r\n            // providers: [] add singleton providers here \r\n        }\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/shared/shared.module.ts\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar exceptions_1 = require('../facade/exceptions');\nvar lang_1 = require('../facade/lang');\n/**\n * Base class for control directives.\n *\n * Only used internally in the forms module.\n *\n * @experimental\n */\nvar AbstractControlDirective = (function () {\n    function AbstractControlDirective() {\n    }\n    Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n        get: function () { return exceptions_1.unimplemented(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n        get: function () { return lang_1.isPresent(this.control) ? this.control.value : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n        get: function () { return lang_1.isPresent(this.control) ? this.control.valid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n        get: function () { return lang_1.isPresent(this.control) ? this.control.invalid : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n        get: function () { return lang_1.isPresent(this.control) ? this.control.pending : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n        get: function () {\n            return lang_1.isPresent(this.control) ? this.control.errors : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n        get: function () { return lang_1.isPresent(this.control) ? this.control.pristine : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n        get: function () { return lang_1.isPresent(this.control) ? this.control.dirty : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n        get: function () { return lang_1.isPresent(this.control) ? this.control.touched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n        get: function () { return lang_1.isPresent(this.control) ? this.control.untouched : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n        get: function () {\n            return lang_1.isPresent(this.control) ? this.control.statusChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n        get: function () {\n            return lang_1.isPresent(this.control) ? this.control.valueChanges : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    AbstractControlDirective.prototype.reset = function (value) {\n        if (value === void 0) { value = undefined; }\n        if (lang_1.isPresent(this.control))\n            this.control.reset(value);\n    };\n    return AbstractControlDirective;\n}());\nexports.AbstractControlDirective = AbstractControlDirective;\n//# sourceMappingURL=abstract_control_directive.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/abstract_control_directive.js\n ** module id = 255\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar lang_1 = require('../facade/lang');\nvar ng_control_1 = require('./ng_control');\nvar NgControlStatus = (function () {\n    function NgControlStatus(cd) {\n        this._cd = cd;\n    }\n    Object.defineProperty(NgControlStatus.prototype, \"ngClassUntouched\", {\n        get: function () {\n            return lang_1.isPresent(this._cd.control) ? this._cd.control.untouched : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControlStatus.prototype, \"ngClassTouched\", {\n        get: function () {\n            return lang_1.isPresent(this._cd.control) ? this._cd.control.touched : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControlStatus.prototype, \"ngClassPristine\", {\n        get: function () {\n            return lang_1.isPresent(this._cd.control) ? this._cd.control.pristine : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControlStatus.prototype, \"ngClassDirty\", {\n        get: function () {\n            return lang_1.isPresent(this._cd.control) ? this._cd.control.dirty : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControlStatus.prototype, \"ngClassValid\", {\n        get: function () {\n            return lang_1.isPresent(this._cd.control) ? this._cd.control.valid : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgControlStatus.prototype, \"ngClassInvalid\", {\n        get: function () {\n            return lang_1.isPresent(this._cd.control) ? !this._cd.control.valid : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @nocollapse */\n    NgControlStatus.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[formControlName],[ngModel],[formControl]',\n                    host: {\n                        '[class.ng-untouched]': 'ngClassUntouched',\n                        '[class.ng-touched]': 'ngClassTouched',\n                        '[class.ng-pristine]': 'ngClassPristine',\n                        '[class.ng-dirty]': 'ngClassDirty',\n                        '[class.ng-valid]': 'ngClassValid',\n                        '[class.ng-invalid]': 'ngClassInvalid'\n                    }\n                },] },\n    ];\n    /** @nocollapse */\n    NgControlStatus.ctorParameters = [\n        { type: ng_control_1.NgControl, decorators: [{ type: core_1.Self },] },\n    ];\n    return NgControlStatus;\n}());\nexports.NgControlStatus = NgControlStatus;\n//# sourceMappingURL=ng_control_status.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/ng_control_status.js\n ** module id = 256\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar async_1 = require('../facade/async');\nvar model_1 = require('../model');\nvar validators_1 = require('../validators');\nvar abstract_form_group_directive_1 = require('./abstract_form_group_directive');\nvar control_container_1 = require('./control_container');\nvar control_value_accessor_1 = require('./control_value_accessor');\nvar ng_control_1 = require('./ng_control');\nvar ng_form_1 = require('./ng_form');\nvar ng_model_group_1 = require('./ng_model_group');\nvar shared_1 = require('./shared');\nvar template_driven_errors_1 = require('./template_driven_errors');\nexports.formControlBinding = {\n    provide: ng_control_1.NgControl,\n    useExisting: core_1.forwardRef(function () { return NgModel; })\n};\nvar resolvedPromise = Promise.resolve(null);\nvar NgModel = (function (_super) {\n    __extends(NgModel, _super);\n    function NgModel(_parent, _validators, _asyncValidators, valueAccessors) {\n        _super.call(this);\n        this._parent = _parent;\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        /** @internal */\n        this._control = new model_1.FormControl();\n        /** @internal */\n        this._registered = false;\n        this.update = new async_1.EventEmitter();\n        this.valueAccessor = shared_1.selectValueAccessor(this, valueAccessors);\n    }\n    NgModel.prototype.ngOnChanges = function (changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if (shared_1.isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n    Object.defineProperty(NgModel.prototype, \"control\", {\n        get: function () { return this._control; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"path\", {\n        get: function () {\n            return this._parent ? shared_1.controlPath(this.name, this._parent) : [this.name];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"formDirective\", {\n        get: function () { return this._parent ? this._parent.formDirective : null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"validator\", {\n        get: function () { return shared_1.composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n        get: function () {\n            return shared_1.composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    NgModel.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    NgModel.prototype._setUpControl = function () {\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    };\n    NgModel.prototype._isStandalone = function () {\n        return !this._parent || (this.options && this.options.standalone);\n    };\n    NgModel.prototype._setUpStandalone = function () {\n        shared_1.setUpControl(this._control, this);\n        this._control.updateValueAndValidity({ emitEvent: false });\n    };\n    NgModel.prototype._checkForErrors = function () {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    };\n    NgModel.prototype._checkParentType = function () {\n        if (!(this._parent instanceof ng_model_group_1.NgModelGroup) &&\n            this._parent instanceof abstract_form_group_directive_1.AbstractFormGroupDirective) {\n            template_driven_errors_1.TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof ng_model_group_1.NgModelGroup) && !(this._parent instanceof ng_form_1.NgForm)) {\n            template_driven_errors_1.TemplateDrivenErrors.modelParentException();\n        }\n    };\n    NgModel.prototype._checkName = function () {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            template_driven_errors_1.TemplateDrivenErrors.missingNameException();\n        }\n    };\n    NgModel.prototype._updateValue = function (value) {\n        var _this = this;\n        resolvedPromise.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n    };\n    /** @nocollapse */\n    NgModel.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[ngModel]:not([formControlName]):not([formControl])',\n                    providers: [exports.formControlBinding],\n                    exportAs: 'ngModel'\n                },] },\n    ];\n    /** @nocollapse */\n    NgModel.ctorParameters = [\n        { type: control_container_1.ControlContainer, decorators: [{ type: core_1.Optional }, { type: core_1.Host },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_ASYNC_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [control_value_accessor_1.NG_VALUE_ACCESSOR,] },] },\n    ];\n    /** @nocollapse */\n    NgModel.propDecorators = {\n        'model': [{ type: core_1.Input, args: ['ngModel',] },],\n        'name': [{ type: core_1.Input },],\n        'options': [{ type: core_1.Input, args: ['ngModelOptions',] },],\n        'update': [{ type: core_1.Output, args: ['ngModelChange',] },],\n    };\n    return NgModel;\n}(ng_control_1.NgControl));\nexports.NgModel = NgModel;\n//# sourceMappingURL=ng_model.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/ng_model.js\n ** module id = 257\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar lang_1 = require('../facade/lang');\nvar control_value_accessor_1 = require('./control_value_accessor');\nexports.NUMBER_VALUE_ACCESSOR = {\n    provide: control_value_accessor_1.NG_VALUE_ACCESSOR,\n    useExisting: core_1.forwardRef(function () { return NumberValueAccessor; }),\n    multi: true\n};\nvar NumberValueAccessor = (function () {\n    function NumberValueAccessor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    NumberValueAccessor.prototype.writeValue = function (value) {\n        // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n        var normalizedValue = lang_1.isBlank(value) ? '' : value;\n        this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    };\n    NumberValueAccessor.prototype.registerOnChange = function (fn) {\n        this.onChange = function (value) { fn(value == '' ? null : lang_1.NumberWrapper.parseFloat(value)); };\n    };\n    NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n    /** @nocollapse */\n    NumberValueAccessor.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                    host: {\n                        '(change)': 'onChange($event.target.value)',\n                        '(input)': 'onChange($event.target.value)',\n                        '(blur)': 'onTouched()'\n                    },\n                    providers: [exports.NUMBER_VALUE_ACCESSOR]\n                },] },\n    ];\n    /** @nocollapse */\n    NumberValueAccessor.ctorParameters = [\n        { type: core_1.Renderer, },\n        { type: core_1.ElementRef, },\n    ];\n    return NumberValueAccessor;\n}());\nexports.NumberValueAccessor = NumberValueAccessor;\n//# sourceMappingURL=number_value_accessor.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/number_value_accessor.js\n ** module id = 258\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar async_1 = require('../../facade/async');\nvar collection_1 = require('../../facade/collection');\nvar validators_1 = require('../../validators');\nvar control_value_accessor_1 = require('../control_value_accessor');\nvar ng_control_1 = require('../ng_control');\nvar shared_1 = require('../shared');\nexports.formControlBinding = {\n    provide: ng_control_1.NgControl,\n    useExisting: core_1.forwardRef(function () { return FormControlDirective; })\n};\nvar FormControlDirective = (function (_super) {\n    __extends(FormControlDirective, _super);\n    function FormControlDirective(_validators, _asyncValidators, valueAccessors) {\n        _super.call(this);\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        this.update = new async_1.EventEmitter();\n        this.valueAccessor = shared_1.selectValueAccessor(this, valueAccessors);\n    }\n    FormControlDirective.prototype.ngOnChanges = function (changes) {\n        if (this._isControlChanged(changes)) {\n            shared_1.setUpControl(this.form, this);\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (shared_1.isPropertyUpdated(changes, this.viewModel)) {\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    };\n    Object.defineProperty(FormControlDirective.prototype, \"path\", {\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n        get: function () { return shared_1.composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n        get: function () {\n            return shared_1.composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlDirective.prototype, \"control\", {\n        get: function () { return this.form; },\n        enumerable: true,\n        configurable: true\n    });\n    FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    FormControlDirective.prototype._isControlChanged = function (changes) {\n        return collection_1.StringMapWrapper.contains(changes, 'form');\n    };\n    /** @nocollapse */\n    FormControlDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[formControl]', providers: [exports.formControlBinding], exportAs: 'ngForm' },] },\n    ];\n    /** @nocollapse */\n    FormControlDirective.ctorParameters = [\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_ASYNC_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [control_value_accessor_1.NG_VALUE_ACCESSOR,] },] },\n    ];\n    /** @nocollapse */\n    FormControlDirective.propDecorators = {\n        'form': [{ type: core_1.Input, args: ['formControl',] },],\n        'model': [{ type: core_1.Input, args: ['ngModel',] },],\n        'update': [{ type: core_1.Output, args: ['ngModelChange',] },],\n    };\n    return FormControlDirective;\n}(ng_control_1.NgControl));\nexports.FormControlDirective = FormControlDirective;\n//# sourceMappingURL=form_control_directive.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/reactive_directives/form_control_directive.js\n ** module id = 259\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar core_1 = require('@angular/core');\nvar async_1 = require('../../facade/async');\nvar validators_1 = require('../../validators');\nvar abstract_form_group_directive_1 = require('../abstract_form_group_directive');\nvar control_container_1 = require('../control_container');\nvar control_value_accessor_1 = require('../control_value_accessor');\nvar ng_control_1 = require('../ng_control');\nvar reactive_errors_1 = require('../reactive_errors');\nvar shared_1 = require('../shared');\nvar form_group_directive_1 = require('./form_group_directive');\nvar form_group_name_1 = require('./form_group_name');\nexports.controlNameBinding = {\n    provide: ng_control_1.NgControl,\n    useExisting: core_1.forwardRef(function () { return FormControlName; })\n};\nvar FormControlName = (function (_super) {\n    __extends(FormControlName, _super);\n    function FormControlName(_parent, _validators, _asyncValidators, valueAccessors) {\n        _super.call(this);\n        this._parent = _parent;\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        this._added = false;\n        this.update = new async_1.EventEmitter();\n        this.valueAccessor = shared_1.selectValueAccessor(this, valueAccessors);\n    }\n    FormControlName.prototype.ngOnChanges = function (changes) {\n        if (!this._added) {\n            this._checkParentType();\n            this.formDirective.addControl(this);\n            this._added = true;\n        }\n        if (shared_1.isPropertyUpdated(changes, this.viewModel)) {\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    };\n    FormControlName.prototype.ngOnDestroy = function () { this.formDirective.removeControl(this); };\n    FormControlName.prototype.viewToModelUpdate = function (newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    };\n    Object.defineProperty(FormControlName.prototype, \"path\", {\n        get: function () { return shared_1.controlPath(this.name, this._parent); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n        get: function () { return this._parent.formDirective; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"validator\", {\n        get: function () { return shared_1.composeValidators(this._validators); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n        get: function () {\n            return shared_1.composeAsyncValidators(this._asyncValidators);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FormControlName.prototype, \"control\", {\n        get: function () { return this.formDirective.getControl(this); },\n        enumerable: true,\n        configurable: true\n    });\n    FormControlName.prototype._checkParentType = function () {\n        if (!(this._parent instanceof form_group_name_1.FormGroupName) &&\n            this._parent instanceof abstract_form_group_directive_1.AbstractFormGroupDirective) {\n            reactive_errors_1.ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof form_group_name_1.FormGroupName) &&\n            !(this._parent instanceof form_group_directive_1.FormGroupDirective) &&\n            !(this._parent instanceof form_group_name_1.FormArrayName)) {\n            reactive_errors_1.ReactiveErrors.controlParentException();\n        }\n    };\n    /** @nocollapse */\n    FormControlName.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[formControlName]', providers: [exports.controlNameBinding] },] },\n    ];\n    /** @nocollapse */\n    FormControlName.ctorParameters = [\n        { type: control_container_1.ControlContainer, decorators: [{ type: core_1.Optional }, { type: core_1.Host }, { type: core_1.SkipSelf },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [validators_1.NG_ASYNC_VALIDATORS,] },] },\n        { type: Array, decorators: [{ type: core_1.Optional }, { type: core_1.Self }, { type: core_1.Inject, args: [control_value_accessor_1.NG_VALUE_ACCESSOR,] },] },\n    ];\n    /** @nocollapse */\n    FormControlName.propDecorators = {\n        'name': [{ type: core_1.Input, args: ['formControlName',] },],\n        'model': [{ type: core_1.Input, args: ['ngModel',] },],\n        'update': [{ type: core_1.Output, args: ['ngModelChange',] },],\n    };\n    return FormControlName;\n}(ng_control_1.NgControl));\nexports.FormControlName = FormControlName;\n//# sourceMappingURL=form_control_name.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/reactive_directives/form_control_name.js\n ** module id = 260\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar exceptions_1 = require('../facade/exceptions');\nvar error_examples_1 = require('./error_examples');\nvar ReactiveErrors = (function () {\n    function ReactiveErrors() {\n    }\n    ReactiveErrors.controlParentException = function () {\n        throw new exceptions_1.BaseException(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + error_examples_1.FormErrorExamples.formControlName);\n    };\n    ReactiveErrors.ngModelGroupException = function () {\n        throw new exceptions_1.BaseException(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + error_examples_1.FormErrorExamples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + error_examples_1.FormErrorExamples.ngModelGroup);\n    };\n    ReactiveErrors.missingFormException = function () {\n        throw new exceptions_1.BaseException(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + error_examples_1.FormErrorExamples.formControlName);\n    };\n    ReactiveErrors.groupParentException = function () {\n        throw new exceptions_1.BaseException(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + error_examples_1.FormErrorExamples.formGroupName);\n    };\n    ReactiveErrors.arrayParentException = function () {\n        throw new exceptions_1.BaseException(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + error_examples_1.FormErrorExamples.formArrayName);\n    };\n    return ReactiveErrors;\n}());\nexports.ReactiveErrors = ReactiveErrors;\n//# sourceMappingURL=reactive_errors.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/reactive_errors.js\n ** module id = 261\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar lang_1 = require('../facade/lang');\nvar validators_1 = require('../validators');\nexports.REQUIRED = validators_1.Validators.required;\nexports.REQUIRED_VALIDATOR = {\n    provide: validators_1.NG_VALIDATORS,\n    useValue: exports.REQUIRED,\n    multi: true\n};\nvar RequiredValidator = (function () {\n    function RequiredValidator() {\n    }\n    /** @nocollapse */\n    RequiredValidator.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[required][formControlName],[required][formControl],[required][ngModel]',\n                    providers: [exports.REQUIRED_VALIDATOR]\n                },] },\n    ];\n    return RequiredValidator;\n}());\nexports.RequiredValidator = RequiredValidator;\n/**\n * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {@example common/forms/ts/validators/validators.ts region='min'}\n */\nexports.MIN_LENGTH_VALIDATOR = {\n    provide: validators_1.NG_VALIDATORS,\n    useExisting: core_1.forwardRef(function () { return MinLengthValidator; }),\n    multi: true\n};\nvar MinLengthValidator = (function () {\n    function MinLengthValidator(minLength) {\n        this._validator = validators_1.Validators.minLength(lang_1.NumberWrapper.parseInt(minLength, 10));\n    }\n    MinLengthValidator.prototype.validate = function (c) { return this._validator(c); };\n    /** @nocollapse */\n    MinLengthValidator.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                    providers: [exports.MIN_LENGTH_VALIDATOR]\n                },] },\n    ];\n    /** @nocollapse */\n    MinLengthValidator.ctorParameters = [\n        { type: undefined, decorators: [{ type: core_1.Attribute, args: ['minlength',] },] },\n    ];\n    return MinLengthValidator;\n}());\nexports.MinLengthValidator = MinLengthValidator;\n/**\n * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n *\n * ## Example:\n *\n * {@example common/forms/ts/validators/validators.ts region='max'}\n */\nexports.MAX_LENGTH_VALIDATOR = {\n    provide: validators_1.NG_VALIDATORS,\n    useExisting: core_1.forwardRef(function () { return MaxLengthValidator; }),\n    multi: true\n};\nvar MaxLengthValidator = (function () {\n    function MaxLengthValidator(maxLength) {\n        this._validator = validators_1.Validators.maxLength(lang_1.NumberWrapper.parseInt(maxLength, 10));\n    }\n    MaxLengthValidator.prototype.validate = function (c) { return this._validator(c); };\n    /** @nocollapse */\n    MaxLengthValidator.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                    providers: [exports.MAX_LENGTH_VALIDATOR]\n                },] },\n    ];\n    /** @nocollapse */\n    MaxLengthValidator.ctorParameters = [\n        { type: undefined, decorators: [{ type: core_1.Attribute, args: ['maxlength',] },] },\n    ];\n    return MaxLengthValidator;\n}());\nexports.MaxLengthValidator = MaxLengthValidator;\nexports.PATTERN_VALIDATOR = {\n    provide: validators_1.NG_VALIDATORS,\n    useExisting: core_1.forwardRef(function () { return PatternValidator; }),\n    multi: true\n};\nvar PatternValidator = (function () {\n    function PatternValidator(pattern) {\n        this._validator = validators_1.Validators.pattern(pattern);\n    }\n    PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n    /** @nocollapse */\n    PatternValidator.decorators = [\n        { type: core_1.Directive, args: [{\n                    selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                    providers: [exports.PATTERN_VALIDATOR]\n                },] },\n    ];\n    /** @nocollapse */\n    PatternValidator.ctorParameters = [\n        { type: undefined, decorators: [{ type: core_1.Attribute, args: ['pattern',] },] },\n    ];\n    return PatternValidator;\n}());\nexports.PatternValidator = PatternValidator;\n//# sourceMappingURL=validators.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/validators.js\n ** module id = 262\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar checkbox_value_accessor_1 = require('./directives/checkbox_value_accessor');\nvar default_value_accessor_1 = require('./directives/default_value_accessor');\nvar ng_control_status_1 = require('./directives/ng_control_status');\nvar ng_form_1 = require('./directives/ng_form');\nvar ng_model_1 = require('./directives/ng_model');\nvar ng_model_group_1 = require('./directives/ng_model_group');\nvar number_value_accessor_1 = require('./directives/number_value_accessor');\nvar radio_control_value_accessor_1 = require('./directives/radio_control_value_accessor');\nvar form_control_directive_1 = require('./directives/reactive_directives/form_control_directive');\nvar form_control_name_1 = require('./directives/reactive_directives/form_control_name');\nvar form_group_directive_1 = require('./directives/reactive_directives/form_group_directive');\nvar form_group_name_1 = require('./directives/reactive_directives/form_group_name');\nvar select_control_value_accessor_1 = require('./directives/select_control_value_accessor');\nvar select_multiple_control_value_accessor_1 = require('./directives/select_multiple_control_value_accessor');\nvar validators_1 = require('./directives/validators');\nvar checkbox_value_accessor_2 = require('./directives/checkbox_value_accessor');\nexports.CheckboxControlValueAccessor = checkbox_value_accessor_2.CheckboxControlValueAccessor;\nvar default_value_accessor_2 = require('./directives/default_value_accessor');\nexports.DefaultValueAccessor = default_value_accessor_2.DefaultValueAccessor;\nvar ng_control_1 = require('./directives/ng_control');\nexports.NgControl = ng_control_1.NgControl;\nvar ng_control_status_2 = require('./directives/ng_control_status');\nexports.NgControlStatus = ng_control_status_2.NgControlStatus;\nvar ng_form_2 = require('./directives/ng_form');\nexports.NgForm = ng_form_2.NgForm;\nvar ng_model_2 = require('./directives/ng_model');\nexports.NgModel = ng_model_2.NgModel;\nvar ng_model_group_2 = require('./directives/ng_model_group');\nexports.NgModelGroup = ng_model_group_2.NgModelGroup;\nvar number_value_accessor_2 = require('./directives/number_value_accessor');\nexports.NumberValueAccessor = number_value_accessor_2.NumberValueAccessor;\nvar radio_control_value_accessor_2 = require('./directives/radio_control_value_accessor');\nexports.RadioControlValueAccessor = radio_control_value_accessor_2.RadioControlValueAccessor;\nvar form_control_directive_2 = require('./directives/reactive_directives/form_control_directive');\nexports.FormControlDirective = form_control_directive_2.FormControlDirective;\nvar form_control_name_2 = require('./directives/reactive_directives/form_control_name');\nexports.FormControlName = form_control_name_2.FormControlName;\nvar form_group_directive_2 = require('./directives/reactive_directives/form_group_directive');\nexports.FormGroupDirective = form_group_directive_2.FormGroupDirective;\nvar form_group_name_2 = require('./directives/reactive_directives/form_group_name');\nexports.FormArrayName = form_group_name_2.FormArrayName;\nexports.FormGroupName = form_group_name_2.FormGroupName;\nvar select_control_value_accessor_2 = require('./directives/select_control_value_accessor');\nexports.NgSelectOption = select_control_value_accessor_2.NgSelectOption;\nexports.SelectControlValueAccessor = select_control_value_accessor_2.SelectControlValueAccessor;\nvar select_multiple_control_value_accessor_2 = require('./directives/select_multiple_control_value_accessor');\nexports.NgSelectMultipleOption = select_multiple_control_value_accessor_2.NgSelectMultipleOption;\nexports.SelectMultipleControlValueAccessor = select_multiple_control_value_accessor_2.SelectMultipleControlValueAccessor;\nvar validators_2 = require('./directives/validators');\nexports.MaxLengthValidator = validators_2.MaxLengthValidator;\nexports.MinLengthValidator = validators_2.MinLengthValidator;\nexports.PatternValidator = validators_2.PatternValidator;\nexports.RequiredValidator = validators_2.RequiredValidator;\nexports.SHARED_FORM_DIRECTIVES = [\n    select_control_value_accessor_1.NgSelectOption, select_multiple_control_value_accessor_1.NgSelectMultipleOption, default_value_accessor_1.DefaultValueAccessor, number_value_accessor_1.NumberValueAccessor,\n    checkbox_value_accessor_1.CheckboxControlValueAccessor, select_control_value_accessor_1.SelectControlValueAccessor, select_multiple_control_value_accessor_1.SelectMultipleControlValueAccessor,\n    radio_control_value_accessor_1.RadioControlValueAccessor, ng_control_status_1.NgControlStatus, validators_1.RequiredValidator, validators_1.MinLengthValidator,\n    validators_1.MaxLengthValidator, validators_1.PatternValidator\n];\nexports.TEMPLATE_DRIVEN_DIRECTIVES = [ng_model_1.NgModel, ng_model_group_1.NgModelGroup, ng_form_1.NgForm];\nexports.REACTIVE_DRIVEN_DIRECTIVES = [form_control_directive_1.FormControlDirective, form_group_directive_1.FormGroupDirective, form_control_name_1.FormControlName, form_group_name_1.FormGroupName, form_group_name_1.FormArrayName];\n/**\n *\n * A list of all the form directives used as part of a `@Component` annotation.\n *\n *  This is a shorthand for importing them each individually.\n *\n * ### Example\n *\n * ```typescript\n * @Component({\n *   selector: 'my-app',\n *   directives: [FORM_DIRECTIVES]\n * })\n * class MyApp {}\n * ```\n * @experimental\n */\nexports.FORM_DIRECTIVES = [exports.TEMPLATE_DRIVEN_DIRECTIVES, exports.SHARED_FORM_DIRECTIVES];\n/**\n * @experimental\n */\nexports.REACTIVE_FORM_DIRECTIVES = [exports.REACTIVE_DRIVEN_DIRECTIVES, exports.SHARED_FORM_DIRECTIVES];\nvar InternalFormsSharedModule = (function () {\n    function InternalFormsSharedModule() {\n    }\n    /** @nocollapse */\n    InternalFormsSharedModule.decorators = [\n        { type: core_1.NgModule, args: [{ declarations: exports.SHARED_FORM_DIRECTIVES, exports: exports.SHARED_FORM_DIRECTIVES },] },\n    ];\n    return InternalFormsSharedModule;\n}());\nexports.InternalFormsSharedModule = InternalFormsSharedModule;\n//# sourceMappingURL=directives.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives.js\n ** module id = 382\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nexports.FormErrorExamples = {\n    formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n    formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n    formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n    ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n    ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n};\n//# sourceMappingURL=error_examples.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/error_examples.js\n ** module id = 383\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar exceptions_1 = require('../facade/exceptions');\nvar error_examples_1 = require('./error_examples');\nvar TemplateDrivenErrors = (function () {\n    function TemplateDrivenErrors() {\n    }\n    TemplateDrivenErrors.modelParentException = function () {\n        throw new exceptions_1.BaseException(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + error_examples_1.FormErrorExamples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + error_examples_1.FormErrorExamples.ngModelWithFormGroup);\n    };\n    TemplateDrivenErrors.formGroupNameException = function () {\n        throw new exceptions_1.BaseException(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + error_examples_1.FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + error_examples_1.FormErrorExamples.ngModelGroup);\n    };\n    TemplateDrivenErrors.missingNameException = function () {\n        throw new exceptions_1.BaseException(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n    };\n    TemplateDrivenErrors.modelGroupParentException = function () {\n        throw new exceptions_1.BaseException(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + error_examples_1.FormErrorExamples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + error_examples_1.FormErrorExamples.ngModelGroup);\n    };\n    return TemplateDrivenErrors;\n}());\nexports.TemplateDrivenErrors = TemplateDrivenErrors;\n//# sourceMappingURL=template_driven_errors.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/template_driven_errors.js\n ** module id = 384\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * A base class for the WrappedException that can be used to identify\n * a WrappedException from ExceptionHandler without adding circular\n * dependency.\n */\nvar BaseWrappedException = (function (_super) {\n    __extends(BaseWrappedException, _super);\n    function BaseWrappedException(message) {\n        _super.call(this, message);\n    }\n    Object.defineProperty(BaseWrappedException.prototype, \"wrapperMessage\", {\n        get: function () { return ''; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseWrappedException.prototype, \"wrapperStack\", {\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseWrappedException.prototype, \"originalException\", {\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseWrappedException.prototype, \"originalStack\", {\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseWrappedException.prototype, \"context\", {\n        get: function () { return null; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseWrappedException.prototype, \"message\", {\n        get: function () { return ''; },\n        enumerable: true,\n        configurable: true\n    });\n    return BaseWrappedException;\n}(Error));\nexports.BaseWrappedException = BaseWrappedException;\n//# sourceMappingURL=base_wrapped_exception.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/facade/base_wrapped_exception.js\n ** module id = 385\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar base_wrapped_exception_1 = require('./base_wrapped_exception');\nvar collection_1 = require('./collection');\nvar lang_1 = require('./lang');\nvar _ArrayLogger = (function () {\n    function _ArrayLogger() {\n        this.res = [];\n    }\n    _ArrayLogger.prototype.log = function (s) { this.res.push(s); };\n    _ArrayLogger.prototype.logError = function (s) { this.res.push(s); };\n    _ArrayLogger.prototype.logGroup = function (s) { this.res.push(s); };\n    _ArrayLogger.prototype.logGroupEnd = function () { };\n    ;\n    return _ArrayLogger;\n}());\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ExceptionHandler` prints error messages to the `Console`. To\n * intercept error handling,\n * write a custom exception handler that replaces this default as appropriate for your app.\n *\n * ### Example\n *\n * ```javascript\n *\n * class MyExceptionHandler implements ExceptionHandler {\n *   call(error, stackTrace = null, reason = null) {\n *     // do something with the exception\n *   }\n * }\n *\n * bootstrap(MyApp, [{provide: ExceptionHandler, useClass: MyExceptionHandler}])\n *\n * ```\n * @stable\n */\nvar ExceptionHandler = (function () {\n    function ExceptionHandler(_logger, _rethrowException) {\n        if (_rethrowException === void 0) { _rethrowException = true; }\n        this._logger = _logger;\n        this._rethrowException = _rethrowException;\n    }\n    ExceptionHandler.exceptionToString = function (exception, stackTrace, reason) {\n        if (stackTrace === void 0) { stackTrace = null; }\n        if (reason === void 0) { reason = null; }\n        var l = new _ArrayLogger();\n        var e = new ExceptionHandler(l, false);\n        e.call(exception, stackTrace, reason);\n        return l.res.join('\\n');\n    };\n    ExceptionHandler.prototype.call = function (exception, stackTrace, reason) {\n        if (stackTrace === void 0) { stackTrace = null; }\n        if (reason === void 0) { reason = null; }\n        var originalException = this._findOriginalException(exception);\n        var originalStack = this._findOriginalStack(exception);\n        var context = this._findContext(exception);\n        this._logger.logGroup(\"EXCEPTION: \" + this._extractMessage(exception));\n        if (lang_1.isPresent(stackTrace) && lang_1.isBlank(originalStack)) {\n            this._logger.logError('STACKTRACE:');\n            this._logger.logError(this._longStackTrace(stackTrace));\n        }\n        if (lang_1.isPresent(reason)) {\n            this._logger.logError(\"REASON: \" + reason);\n        }\n        if (lang_1.isPresent(originalException)) {\n            this._logger.logError(\"ORIGINAL EXCEPTION: \" + this._extractMessage(originalException));\n        }\n        if (lang_1.isPresent(originalStack)) {\n            this._logger.logError('ORIGINAL STACKTRACE:');\n            this._logger.logError(this._longStackTrace(originalStack));\n        }\n        if (lang_1.isPresent(context)) {\n            this._logger.logError('ERROR CONTEXT:');\n            this._logger.logError(context);\n        }\n        this._logger.logGroupEnd();\n        // We rethrow exceptions, so operations like 'bootstrap' will result in an error\n        // when an exception happens. If we do not rethrow, bootstrap will always succeed.\n        if (this._rethrowException)\n            throw exception;\n    };\n    /** @internal */\n    ExceptionHandler.prototype._extractMessage = function (exception) {\n        return exception instanceof base_wrapped_exception_1.BaseWrappedException ? exception.wrapperMessage :\n            exception.toString();\n    };\n    /** @internal */\n    ExceptionHandler.prototype._longStackTrace = function (stackTrace) {\n        return collection_1.isListLikeIterable(stackTrace) ? stackTrace.join('\\n\\n-----async gap-----\\n') :\n            stackTrace.toString();\n    };\n    /** @internal */\n    ExceptionHandler.prototype._findContext = function (exception) {\n        try {\n            if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException))\n                return null;\n            return lang_1.isPresent(exception.context) ? exception.context :\n                this._findContext(exception.originalException);\n        }\n        catch (e) {\n            // exception.context can throw an exception. if it happens, we ignore the context.\n            return null;\n        }\n    };\n    /** @internal */\n    ExceptionHandler.prototype._findOriginalException = function (exception) {\n        if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException))\n            return null;\n        var e = exception.originalException;\n        while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {\n            e = e.originalException;\n        }\n        return e;\n    };\n    /** @internal */\n    ExceptionHandler.prototype._findOriginalStack = function (exception) {\n        if (!(exception instanceof base_wrapped_exception_1.BaseWrappedException))\n            return null;\n        var e = exception;\n        var stack = exception.originalStack;\n        while (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {\n            e = e.originalException;\n            if (e instanceof base_wrapped_exception_1.BaseWrappedException && lang_1.isPresent(e.originalException)) {\n                stack = e.originalStack;\n            }\n        }\n        return stack;\n    };\n    return ExceptionHandler;\n}());\nexports.ExceptionHandler = ExceptionHandler;\n//# sourceMappingURL=exception_handler.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/facade/exception_handler.js\n ** module id = 386\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar collection_1 = require('./facade/collection');\nvar lang_1 = require('./facade/lang');\nvar model_1 = require('./model');\nvar FormBuilder = (function () {\n    function FormBuilder() {\n    }\n    /**\n     * Construct a new {@link FormGroup} with the given map of configuration.\n     * Valid keys for the `extra` parameter map are `optionals` and `validator`.\n     *\n     * See the {@link FormGroup} constructor for more details.\n     */\n    FormBuilder.prototype.group = function (controlsConfig, extra) {\n        if (extra === void 0) { extra = null; }\n        var controls = this._reduceControls(controlsConfig);\n        var optionals = (lang_1.isPresent(extra) ? collection_1.StringMapWrapper.get(extra, 'optionals') : null);\n        var validator = lang_1.isPresent(extra) ? collection_1.StringMapWrapper.get(extra, 'validator') : null;\n        var asyncValidator = lang_1.isPresent(extra) ? collection_1.StringMapWrapper.get(extra, 'asyncValidator') : null;\n        return new model_1.FormGroup(controls, optionals, validator, asyncValidator);\n    };\n    /**\n     * Construct a new {@link FormControl} with the given `value`,`validator`, and `asyncValidator`.\n     */\n    FormBuilder.prototype.control = function (value, validator, asyncValidator) {\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        return new model_1.FormControl(value, validator, asyncValidator);\n    };\n    /**\n     * Construct an array of {@link FormControl}s from the given `controlsConfig` array of\n     * configuration, with the given optional `validator` and `asyncValidator`.\n     */\n    FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n        var _this = this;\n        if (validator === void 0) { validator = null; }\n        if (asyncValidator === void 0) { asyncValidator = null; }\n        var controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n        return new model_1.FormArray(controls, validator, asyncValidator);\n    };\n    /** @internal */\n    FormBuilder.prototype._reduceControls = function (controlsConfig) {\n        var _this = this;\n        var controls = {};\n        collection_1.StringMapWrapper.forEach(controlsConfig, function (controlConfig, controlName) {\n            controls[controlName] = _this._createControl(controlConfig);\n        });\n        return controls;\n    };\n    /** @internal */\n    FormBuilder.prototype._createControl = function (controlConfig) {\n        if (controlConfig instanceof model_1.FormControl || controlConfig instanceof model_1.FormGroup ||\n            controlConfig instanceof model_1.FormArray) {\n            return controlConfig;\n        }\n        else if (lang_1.isArray(controlConfig)) {\n            var value = controlConfig[0];\n            var validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    };\n    /** @nocollapse */\n    FormBuilder.decorators = [\n        { type: core_1.Injectable },\n    ];\n    return FormBuilder;\n}());\nexports.FormBuilder = FormBuilder;\n//# sourceMappingURL=form_builder.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/form_builder.js\n ** module id = 387\n ** module chunks = 2\n **/","import { Component, Input, OnInit, OnDestroy,\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\n\r\nimport { SearchQuery } from '../services/model/searchQuery';\r\nimport { SpotifyAlbum } from '../services/model/spotifyAlbum';\r\nimport { QuantoneService } from '../services/quantone.service';\r\nimport { SpotifyService } from '../services/spotify.service';\r\n\r\n@Component({\r\n  template: require('./albums.component.html'),\r\n  animations: [\r\n      trigger('albumState', [\r\n      state('inactive', style({\r\n        opacity: 0\r\n      })),\r\n      state('active',   style({\r\n        opacity: 1\r\n      })),\r\n      transition('inactive => active', animate('20ms ease-in')),\r\n      transition('active => inactive', animate(10))\r\n    ]),\r\n    trigger('noResultsState', [\r\n      state('inactive', style({\r\n        opacity: 0\r\n      })),\r\n      state('active',   style({\r\n        opacity: 1\r\n      })),\r\n      transition('inactive => active', animate('500ms ease-in')),\r\n      transition('active => inactive', animate(0))\r\n    ])\r\n  ]\r\n})\r\nexport class AlbumsComponent implements OnInit, OnDestroy {\r\n    constructor(private router: Router,\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService,\r\n    private quantoneService: QuantoneService) {}\r\n    \r\n    private sub: any;\r\n    private errorMessage;\r\n    private query: SearchQuery;\r\n    private searchQueryStream: BehaviorSubject<SearchQuery>;\r\n\r\n    public albums: Observable<SpotifyAlbum[]>;\r\n    public state: string = 'inactive';\r\n    public noResultsState: string = 'inactive';\r\n\r\n  ngOnInit() {\r\n      this.sub = this\r\n        .router\r\n        .routerState\r\n        .queryParams\r\n        .subscribe(params => {\r\n            this.state = 'inactive';\r\n            this.noResultsState = 'inactive';\r\n            this.query = this._getSearchQueryFromParams(params);\r\n            if(!this.query.isValid()) {\r\n                return;\r\n            }\r\n            if (this._noSearchQueryStream()) {\r\n                this._initSearchQueryStream();\r\n            } else {\r\n                this.searchQueryStream.next(this.query);\r\n            }\r\n        },\r\n        error => console.log(error));\r\n  }\r\n\r\n  _getSearchQueryFromParams(params: Params){\r\n      return new SearchQuery(this._getParam(params['query']), this._getParam(params['label']), this._getParam(params['year']), 0);\r\n  }\r\n  _getParam(param: any) {\r\n      if (!!param && param !== 'true') {\r\n          return param;\r\n      }\r\n      return ' ';\r\n  }\r\n  _noSearchQueryStream(){\r\n      return !!this.searchQueryStream === false;\r\n  }\r\n  _initSearchQueryStream(){\r\n    this.searchQueryStream = new BehaviorSubject<SearchQuery>(this.query);\r\n    this.albums = this.searchQueryStream\r\n        .filter(search => !!search && (search.query.length > 2 || search.label.length > 2))\r\n        .concatMap((query: SearchQuery) => {\r\n            if (this.query.scrolling === false) {\r\n                this.state = 'inactive';\r\n            }\r\n            return this.spotifyService.getAlbums(query)\r\n                .map((albums: SpotifyAlbum[]) => {\r\n                    this.state = 'active';\r\n                    this.query.scrolling = false;\r\n                    if(albums.length === 0) {\r\n                        let timer = Observable.timer(3000);\r\n                        timer.subscribe(() => this.noResultsState = 'active');\r\n                    }\r\n                    return albums;\r\n                });\r\n        });\r\n  }\r\n\r\n  onScroll() {\r\n    this.query.offset += this.spotifyService.perPage;\r\n    if (this.query.offset >= this.spotifyService.getTotal()) {\r\n        console.log('no more results');\r\n        return;\r\n    }\r\n    this.query.scrolling = true;\r\n    this.searchQueryStream.next(this.query);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n      this.sub.unsubscribe();\r\n  }\r\n\r\n  recordsHaveEnded() {\r\n      return this.spotifyService.getTotal() < this.query.offset;\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/albums/albums.component.ts\n **/","import { Component, Input, OnInit, OnDestroy,\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\n\r\nimport { ArtistSearchQuery } from \"../services/model/artistSearchQuery\";\r\nimport { SpotifyAlbum } from \"../services/model/spotifyAlbum\";\r\nimport { QuantoneService } from \"../services/quantone.service\";\r\nimport { SpotifyService } from \"../services/spotify.service\";\r\n\r\n@Component({\r\n    selector: \"tc-artist-albums\",\r\n    template: require(\"./artist-albums.component.html\"),\r\n    animations: [\r\n        trigger('albumState', [\r\n            state('inactive', style({\r\n                opacity: 0\r\n            })),\r\n            state('active',   style({\r\n                opacity: 1\r\n            })),\r\n            transition('inactive => active', animate('100ms 100ms ease-in'))\r\n        ]),\r\n        trigger('noResultsState', [\r\n        state('inactive', style({\r\n            opacity: 0\r\n        })),\r\n        state('active',   style({\r\n            opacity: 1\r\n        })),\r\n        transition('inactive => active', animate('500ms ease-in')),\r\n        transition('active => inactive', animate(10))\r\n        ])\r\n    ]\r\n})\r\nexport class ArtistAlbumsComponent implements OnInit, OnDestroy {\r\n  constructor(private router: Router,\r\n    private route: ActivatedRoute,\r\n    private spotifyService: SpotifyService,\r\n    private quantoneService: QuantoneService) {}\r\n  \r\n  private sub: any;\r\n  private errorMessage;\r\n  private query: ArtistSearchQuery;\r\n  private searchQueryStream: BehaviorSubject<ArtistSearchQuery>;\r\n  private albumsLoaded: boolean = false;\r\n  private canShowAlbums: boolean = false;\r\n\r\n  public albums: Observable<SpotifyAlbum[]>;\r\n  public state: string = 'inactive';\r\n  public noResultsState: string = 'active';\r\n  \r\n  ngOnInit() {\r\n      this.sub = this\r\n        .route\r\n        .params\r\n        .subscribe(params => {\r\n            let query = new ArtistSearchQuery(this._getParam(params[\"id\"]), 0);\r\n            this.query = query;\r\n            if (!!this.searchQueryStream === false) {\r\n                this.searchQueryStream = new BehaviorSubject<ArtistSearchQuery>(this.query);\r\n                this.albums = this.searchQueryStream\r\n                .concatMap((query: ArtistSearchQuery) => {\r\n                    if(this.query.scrolling == false) {\r\n                        this.state = 'inactive';\r\n                    }\r\n                    return this.spotifyService.getArtistAlbums(query)\r\n                        .map((albums: SpotifyAlbum[]) => {\r\n                            this.albumsLoaded = true;\r\n                            \r\n                            if(this.canShowAlbums){\r\n                                this.showAlbums();\r\n                            }\r\n                            this.query.scrolling = false;\r\n                            return albums;\r\n                        });\r\n                });\r\n            } else {\r\n                this.searchQueryStream.next(this.query);\r\n            }\r\n        },\r\n        error => console.log(error));\r\n  }\r\n  _getParam(param: any) {\r\n      if (!!param && param !== \"true\") {\r\n          return param;\r\n      }\r\n      return \" \";\r\n  }\r\n  showAlbums(){\r\n      this.canShowAlbums = true;\r\n      if(this.albumsLoaded) {\r\n          this.state = 'active';\r\n      }\r\n  }\r\n  onScroll() {\r\n    this.query.scrolling = true;\r\n    this.query.offset += this.spotifyService.perPage;\r\n    if (this.query.offset >= this.spotifyService.getTotal()) {\r\n        console.log(\"no more results\");\r\n        return;\r\n    }\r\n    this.searchQueryStream.next(this.query);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n      this.sub.unsubscribe();\r\n  }\r\n\r\n  showTracks(album: SpotifyAlbum) {\r\n      if(!album.showTracks && !album.tracksLoaded) {\r\n        this.quantoneService.getAlbum(album.id)\r\n        .subscribe(\r\n            albumResult => this.spotifyService.updateAlbum(album, albumResult),\r\n            error => this.errorMessage = <any>error\r\n        );\r\n      }\r\n      album.showTracks = !album.showTracks;\r\n  }\r\n\r\n  showChevron(album: SpotifyAlbum) {\r\n      album.isUpChevronHidden = !album.showTracks;\r\n      album.isDownChevronHidden = album.showTracks;\r\n      album.isCopyrightHidden = true;\r\n  }\r\n\r\n  showCopyright(album: SpotifyAlbum) {\r\n      album.isUpChevronHidden = true;\r\n      album.isDownChevronHidden = true;\r\n      album.isCopyrightHidden = false;\r\n  }\r\n  \r\n  recordsHaveEnded() {\r\n      return this.spotifyService.getTotal() < this.query.offset;\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/artist/artist-albums.component.ts\n **/","import { Component, OnInit, ViewChild,\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate } from '@angular/core';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { SpotifyService } from \"../services/spotify.service\";\r\nimport { QuantoneService } from \"../services/quantone.service\";\r\nimport { Artist } from '../services/model/artist';\r\n\r\nimport { ArtistAlbumsComponent } from './artist-albums.component';\r\n\r\n@Component({\r\n    template: require('./artist.component.html'),\r\n    styles: [require('./artist.component.css')],\r\n    animations: [\r\n        trigger('artistState', [\r\n            state('inactive', style({\r\n                opacity: 0\r\n            })),\r\n            state('active',   style({\r\n                opacity: 1\r\n            })),\r\n            transition('inactive => active', [\r\n                style({ height: 0}),\r\n                animate('100ms ease-out', style({ height: '*'}))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class ArtistComponent implements OnInit {\r\n    constructor(private route: ActivatedRoute,\r\n        private spotifyService: SpotifyService,\r\n        private quantoneService: QuantoneService) {}\r\n\r\n    private sub: any;\r\n    private searchQueryStream: BehaviorSubject<string>;\r\n    private artistId: string;\r\n    @ViewChild(ArtistAlbumsComponent)\r\n    private artistAlbumsComponent: ArtistAlbumsComponent;\r\n\r\n    public canShowAlbums: boolean = false;\r\n    public artist: Artist;\r\n    public bioState: string = 'inactive';\r\n    public imageState: string = 'inactive';\r\n\r\n    ngOnInit() {\r\n        let self = this;\r\n        this.sub = this\r\n            .route\r\n            .params\r\n            .subscribe(params => {\r\n                let paramId = params['id'];\r\n                self.artistId = paramId;\r\n                if (!!self.searchQueryStream === false) {\r\n                    self.searchQueryStream = new BehaviorSubject<string>(self.artistId);\r\n                    self.searchQueryStream\r\n                    .concatMap((id: string) => {\r\n                        return self.spotifyService.getArtist(id)\r\n                                .concatMap(artist => {\r\n                                    self.artist = artist;\r\n                                    this.imageState = 'active';\r\n                                    return this.quantoneService\r\n                                            .getArtist(artist.Id)\r\n                                            .map(quantoneArtist => {\r\n                                                if(!!quantoneArtist && quantoneArtist.length > 0) \r\n                                                    artist.Bio = quantoneArtist[0].Bio;\r\n\r\n                                                this.bioState = 'active';\r\n                                                this.artistAlbumsComponent.showAlbums();\r\n                                                \r\n                                                return artist;\r\n                                            })\r\n                                });\r\n                    })\r\n                    .subscribe(artist => {\r\n                        self.artist = artist;\r\n                    });\r\n                    \r\n                } else {\r\n                    self.searchQueryStream.next(self.artistId);\r\n                }\r\n            },\r\n            error => console.log(error));\r\n    }\r\n    _getParam(param: any) {\r\n      if (!!param && param !== \"true\") {\r\n          return param;\r\n      }\r\n      return \" \";\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** src/app/artist/artist.component.ts\n **/","export class SearchQuery {\r\n    public scrolling: boolean;\r\n    constructor(public query: string, public label: string, public year: string, public offset: number) {\r\n        if(!this.query) this.query = '';        \r\n        if(!this.label) this.label = '';        \r\n    }\r\n    isValid() {\r\n        return this.query.trim().length > 0 || this.label.trim().length > 0;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/model/searchQuery.ts\n **/","import { SafeUrl } from '@angular/platform-browser';\r\n\r\nimport { Track } from \"./track\";\r\nimport { Tracks } from \"./spotifyTracks\";\r\nimport { SpotifyArtist } from \"./spotifyArtist\";\r\nimport { SpotifyImage } from \"./spotifyImage\";\r\nimport { SpotifyCopyright } from \"./spotifyCopyright\";\r\n\r\nexport class SpotifyAlbum {\r\n    public tracks: Tracks;\r\n    public showTracks: boolean;\r\n    public tracksLoaded: boolean;\r\n    public image: SpotifyImage;\r\n    public copyright: SpotifyCopyright;\r\n    public uri: string;\r\n    public isCopyrightHidden: boolean;\r\n    public isDownChevronHidden: boolean = true;\r\n    public isUpChevronHidden: boolean = true;\r\n\r\n    constructor (public id: string,\r\n        public name: string,\r\n        public recordings: Track[],\r\n        public artists: SpotifyArtist[],\r\n        public release_date: string,\r\n        public images: SpotifyImage[],\r\n        public copyrights: SpotifyCopyright[],\r\n        public popularity: string,\r\n        public trustedUri: SafeUrl) {\r\n            this.popularity = String((+this.popularity / 10));\r\n            this.image = images[images.length - 1];\r\n            this.copyright = copyrights && copyrights.length > 0 ? copyrights[0] : null;\r\n        }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/model/spotifyAlbum.ts\n **/","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class YearsService {\r\n\r\n    getYears() {\r\n        let years = [];\r\n        let currentYear: number = new Date().getFullYear();\r\n        for (let year = currentYear; year > currentYear - 7; year--) {\r\n            years.push(year);\r\n        }\r\n        return years;\r\n    }\r\n\r\n    getYearsRange() {\r\n        let years = [];\r\n        let currentYear: number = new Date().getFullYear();\r\n        currentYear = currentYear + 10;\r\n        while (currentYear > 1940) {\r\n            let decade = Math.floor(currentYear / 10) * 10;\r\n            let fromDecade = decade - 10;\r\n            years.push(fromDecade + \"-\" + decade);\r\n            currentYear = currentYear - 10;\r\n        }\r\n        return years;\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/years.service.ts\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./src/forms'));\n//# sourceMappingURL=index.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/index.js\n ** module id = 543\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nfunction normalizeValidator(validator) {\n    if (validator.validate !== undefined) {\n        return function (c) { return validator.validate(c); };\n    }\n    else {\n        return validator;\n    }\n}\nexports.normalizeValidator = normalizeValidator;\nfunction normalizeAsyncValidator(validator) {\n    if (validator.validate !== undefined) {\n        return function (c) { return validator.validate(c); };\n    }\n    else {\n        return validator;\n    }\n}\nexports.normalizeAsyncValidator = normalizeAsyncValidator;\n//# sourceMappingURL=normalize_validator.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/directives/normalize_validator.js\n ** module id = 544\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nvar core_1 = require('@angular/core');\nvar directives_1 = require('./directives');\nvar radio_control_value_accessor_1 = require('./directives/radio_control_value_accessor');\nvar form_builder_1 = require('./form_builder');\n/**\n * Shorthand set of providers used for building Angular forms.\n * @experimental\n */\nexports.FORM_PROVIDERS = [radio_control_value_accessor_1.RadioControlRegistry];\n/**\n * Shorthand set of providers used for building reactive Angular forms.\n * @experimental\n */\nexports.REACTIVE_FORM_PROVIDERS = [form_builder_1.FormBuilder, radio_control_value_accessor_1.RadioControlRegistry];\nvar FormsModule = (function () {\n    function FormsModule() {\n    }\n    /** @nocollapse */\n    FormsModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: directives_1.TEMPLATE_DRIVEN_DIRECTIVES,\n                    providers: [exports.FORM_PROVIDERS],\n                    exports: [directives_1.InternalFormsSharedModule, directives_1.TEMPLATE_DRIVEN_DIRECTIVES]\n                },] },\n    ];\n    return FormsModule;\n}());\nexports.FormsModule = FormsModule;\nvar ReactiveFormsModule = (function () {\n    function ReactiveFormsModule() {\n    }\n    /** @nocollapse */\n    ReactiveFormsModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [directives_1.REACTIVE_DRIVEN_DIRECTIVES],\n                    providers: [exports.REACTIVE_FORM_PROVIDERS],\n                    exports: [directives_1.InternalFormsSharedModule, directives_1.REACTIVE_DRIVEN_DIRECTIVES]\n                },] },\n    ];\n    return ReactiveFormsModule;\n}());\nexports.ReactiveFormsModule = ReactiveFormsModule;\n/**\n * @deprecated\n */\nfunction disableDeprecatedForms() {\n    return [];\n}\nexports.disableDeprecatedForms = disableDeprecatedForms;\n/**\n * @deprecated\n */\nfunction provideForms() {\n    return [\n        { provide: core_1.PLATFORM_DIRECTIVES, useValue: directives_1.FORM_DIRECTIVES, multi: true }, exports.REACTIVE_FORM_PROVIDERS\n    ];\n}\nexports.provideForms = provideForms;\n//# sourceMappingURL=form_providers.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/form_providers.js\n ** module id = 545\n ** module chunks = 2\n **/","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a {@link FormGroup} that\n * consists of\n * {@link FormControl} objects, and mapping them onto the DOM. {@link FormControl} objects can then\n * be used\n * to read information\n * from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\nvar directives_1 = require('./directives');\nexports.FORM_DIRECTIVES = directives_1.FORM_DIRECTIVES;\nexports.REACTIVE_FORM_DIRECTIVES = directives_1.REACTIVE_FORM_DIRECTIVES;\nvar abstract_control_directive_1 = require('./directives/abstract_control_directive');\nexports.AbstractControlDirective = abstract_control_directive_1.AbstractControlDirective;\nvar abstract_form_group_directive_1 = require('./directives/abstract_form_group_directive');\nexports.AbstractFormGroupDirective = abstract_form_group_directive_1.AbstractFormGroupDirective;\nvar checkbox_value_accessor_1 = require('./directives/checkbox_value_accessor');\nexports.CheckboxControlValueAccessor = checkbox_value_accessor_1.CheckboxControlValueAccessor;\nvar control_container_1 = require('./directives/control_container');\nexports.ControlContainer = control_container_1.ControlContainer;\nvar control_value_accessor_1 = require('./directives/control_value_accessor');\nexports.NG_VALUE_ACCESSOR = control_value_accessor_1.NG_VALUE_ACCESSOR;\nvar default_value_accessor_1 = require('./directives/default_value_accessor');\nexports.DefaultValueAccessor = default_value_accessor_1.DefaultValueAccessor;\nvar ng_control_1 = require('./directives/ng_control');\nexports.NgControl = ng_control_1.NgControl;\nvar ng_control_status_1 = require('./directives/ng_control_status');\nexports.NgControlStatus = ng_control_status_1.NgControlStatus;\nvar ng_form_1 = require('./directives/ng_form');\nexports.NgForm = ng_form_1.NgForm;\nvar ng_model_1 = require('./directives/ng_model');\nexports.NgModel = ng_model_1.NgModel;\nvar ng_model_group_1 = require('./directives/ng_model_group');\nexports.NgModelGroup = ng_model_group_1.NgModelGroup;\nvar form_control_directive_1 = require('./directives/reactive_directives/form_control_directive');\nexports.FormControlDirective = form_control_directive_1.FormControlDirective;\nvar form_control_name_1 = require('./directives/reactive_directives/form_control_name');\nexports.FormControlName = form_control_name_1.FormControlName;\nvar form_group_directive_1 = require('./directives/reactive_directives/form_group_directive');\nexports.FormGroupDirective = form_group_directive_1.FormGroupDirective;\nvar form_group_name_1 = require('./directives/reactive_directives/form_group_name');\nexports.FormArrayName = form_group_name_1.FormArrayName;\nvar form_group_name_2 = require('./directives/reactive_directives/form_group_name');\nexports.FormGroupName = form_group_name_2.FormGroupName;\nvar select_control_value_accessor_1 = require('./directives/select_control_value_accessor');\nexports.NgSelectOption = select_control_value_accessor_1.NgSelectOption;\nexports.SelectControlValueAccessor = select_control_value_accessor_1.SelectControlValueAccessor;\nvar select_multiple_control_value_accessor_1 = require('./directives/select_multiple_control_value_accessor');\nexports.SelectMultipleControlValueAccessor = select_multiple_control_value_accessor_1.SelectMultipleControlValueAccessor;\nvar validators_1 = require('./directives/validators');\nexports.MaxLengthValidator = validators_1.MaxLengthValidator;\nexports.MinLengthValidator = validators_1.MinLengthValidator;\nexports.PatternValidator = validators_1.PatternValidator;\nexports.RequiredValidator = validators_1.RequiredValidator;\nvar form_builder_1 = require('./form_builder');\nexports.FormBuilder = form_builder_1.FormBuilder;\nvar model_1 = require('./model');\nexports.AbstractControl = model_1.AbstractControl;\nexports.FormArray = model_1.FormArray;\nexports.FormControl = model_1.FormControl;\nexports.FormGroup = model_1.FormGroup;\nvar validators_2 = require('./validators');\nexports.NG_ASYNC_VALIDATORS = validators_2.NG_ASYNC_VALIDATORS;\nexports.NG_VALIDATORS = validators_2.NG_VALIDATORS;\nexports.Validators = validators_2.Validators;\n__export(require('./form_providers'));\n//# sourceMappingURL=forms.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/@angular/forms/src/forms.js\n ** module id = 546\n ** module chunks = 2\n **/","import { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { AlbumsComponent } from './albums.component';\r\nimport { SpotifyService } from '../services/spotify.service';\r\nimport { QuantoneService } from '../services/quantone.service';\r\nimport { routing } from './albums.routing';\r\n\r\n@NgModule({\r\n    imports: [SharedModule, routing],\r\n    declarations: [AlbumsComponent],\r\n    providers: [QuantoneService, SpotifyService]\r\n})\r\nexport class AlbumsModule {}\n\n\n/** WEBPACK FOOTER **\n ** src/app/albums/albums.module.ts\n **/","import { RouterModule } from '@angular/router';\r\n\r\nimport { AlbumsComponent } from './albums.component';\r\n\r\nexport const routing = RouterModule.forChild([\r\n    { path: 'search', component: AlbumsComponent }\r\n]);\n\n\n/** WEBPACK FOOTER **\n ** src/app/albums/albums.routing.ts\n **/","import { Component, ViewEncapsulation } from \"@angular/core\"; \r\n\r\n@Component({\r\n  selector: \"my-app\",\r\n  template: require(\"./app.component.html\"),\r\n  styles: [require(\"./app.component.css\")],\r\n  encapsulation: ViewEncapsulation.None // allow styles to be applied outside this component\r\n})\r\nexport class AppComponent {}\n\n\n/** WEBPACK FOOTER **\n ** src/app/app.component.ts\n **/","import { NgModule }      from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HTTP_PROVIDERS } from \"@angular/http\";\r\n\r\nimport { AppComponent }  from './app.component';\r\nimport { routing } from './app.routing';\r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { HeaderModule } from './header/header.module';\r\nimport { ArtistModule } from './artist/artist.module';\r\nimport { AlbumsModule } from './albums/albums.module';\r\n\r\n@NgModule({\r\n  imports: [ \r\n    BrowserModule, \r\n    routing,\r\n    SharedModule.forRoot(),\r\n    HeaderModule, \r\n    ArtistModule, \r\n    AlbumsModule],\r\n  declarations: [ AppComponent ],\r\n  providers: [HTTP_PROVIDERS],\r\n  bootstrap:    [ AppComponent ]\r\n})\r\nexport class AppModule { }\n\n\n/** WEBPACK FOOTER **\n ** src/app/app.module.ts\n **/","import { RouterModule, RouterConfig } from '@angular/router';\r\n\r\nexport const routes: RouterConfig = [\r\n    { path: '', pathMatch: 'full', redirectTo: 'search' }\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(routes);\n\n\n/** WEBPACK FOOTER **\n ** src/app/app.routing.ts\n **/","import { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ArtistComponent } from './artist.component';\r\nimport { ArtistAlbumsComponent } from './artist-albums.component';\r\n\r\nimport { SpotifyService } from '../services/spotify.service';\r\nimport { QuantoneService } from '../services/quantone.service';\r\nimport { routing } from './artist.routing';\r\n\r\n@NgModule({\r\n    imports: [SharedModule, routing],\r\n    declarations: [ArtistComponent, ArtistAlbumsComponent],\r\n    providers: [SpotifyService, QuantoneService]\r\n})\r\nexport class ArtistModule {}\n\n\n/** WEBPACK FOOTER **\n ** src/app/artist/artist.module.ts\n **/","import { RouterModule } from '@angular/router';\r\nimport { ArtistComponent } from './artist.component';\r\n\r\nexport const routing = RouterModule.forChild([\r\n    { path: 'artist/:id', component: ArtistComponent }\r\n]);\n\n\n/** WEBPACK FOOTER **\n ** src/app/artist/artist.routing.ts\n **/","import { Component, OnInit,\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate } from '@angular/core';\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\n\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Subject } from \"rxjs/Subject\";\r\n\r\nimport { SearchQuery } from \"../services/model/searchQuery\";\r\nimport { YearsService } from \"../services/years.service\";\r\n\r\n@Component({\r\n    selector: 'tc-header',\r\n    template: require('./header.component.html'),\r\n    styles: [require('./header.component.css')],\r\n    animations: [\r\n        trigger('sliderItemsState', [\r\n        state('inactive', style({\r\n          opacity: 0\r\n        })),\r\n        state('active',   style({\r\n          opacity: 1\r\n        })),\r\n        transition('inactive => active', animate('20ms ease-in')),\r\n        transition('active => inactive', animate(10))\r\n      ])\r\n    ]\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  constructor(private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private yearsService: YearsService) {}\r\n\r\n  private errorMessage: string;\r\n  private searchQueryStream = new Subject<SearchQuery>();\r\n  private showYears: boolean = false;\r\n  private sub: any;\r\n\r\n  public years: any[];\r\n  public yearsRange: any[];\r\n  public selectedYear: string = \"\";\r\n  public query: string;\r\n  public label: string;\r\n  public debounceTime: number = 800;\r\n  public sliderItemsState: string = '';\r\n  \r\n  searchQuery: Observable<SearchQuery> = this.searchQueryStream\r\n    .debounceTime(this.debounceTime)\r\n    .distinctUntilChanged();\r\n\r\n  ngOnInit() {\r\n    this.searchQuery.subscribe(query => {\r\n      this._navigateToAlbums(query);\r\n    });\r\n    this.years = this.yearsService.getYears();\r\n    this.yearsRange = this.yearsService.getYearsRange();\r\n    this.sub = this.router\r\n      .routerState\r\n      .queryParams\r\n      .subscribe(params => {\r\n        this.label = this._getParam(params[\"label\"]);\r\n        this.query = this._getParam(params[\"query\"]);\r\n    })\r\n  }\r\n  private _getParam(param: any) {\r\n    if(param === undefined){\r\n      return '';\r\n    }\r\n\r\n    let result: string = param;\r\n    if(result != \"true\") {\r\n      return decodeURI(result);\r\n    }\r\n    \r\n    return '';\r\n  }\r\n  private _navigateToAlbums(search: SearchQuery) {\r\n      this.router.navigate([\"/search\"], { queryParams: { query: search.query, label: search.label, year: search.year } });\r\n  }\r\n  \r\n  public search() {\r\n    this.searchQueryStream.next(new SearchQuery(this.query, this.label, this.selectedYear, 0));\r\n  }\r\n  \r\n  public searchByTerm(term: string) {\r\n    this.query = term;\r\n    this.search();\r\n  }\r\n  \r\n  public searchByLabel(label: string) {\r\n    this.label = label;\r\n    this.search();\r\n  }\r\n  \r\n  public searchByYear(year: string) {\r\n    if (this.selectedYear === year) year = \"\"; // deselect when selected\r\n    this.selectedYear = year;\r\n    this.search();\r\n  }\r\n\r\n  public toggleYears() {\r\n    this.showYears = !this.showYears;\r\n  }\r\n\r\n  public moveSliderLeft(sliderItems) {\r\n    this.moveSlider(true, sliderItems);\r\n  }\r\n\r\n  public moveSliderRight(sliderItems) {\r\n    this.moveSlider(false, sliderItems);\r\n  }\r\n\r\n  private moveSlider(left: boolean, sliderItems) {\r\n    console.log(left);\r\n    console.log(sliderItems);\r\n  }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/header/header.component.ts\n **/","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\nimport { HeaderComponent } from './header.component';\r\nimport { YearsService } from '../services/years.service';\r\n@NgModule({\r\n    imports: [SharedModule, FormsModule],\r\n    declarations: [HeaderComponent],\r\n    exports: [HeaderComponent],\r\n    providers: [YearsService]\r\n})\r\nexport class HeaderModule {\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/header/header.module.ts\n **/","export class Artist {\r\n    public ImageUrl: string;\r\n    constructor(public Id: string, public Name: string, public Bio: string, public Images: Array<any>) {\r\n        this.ImageUrl = this.getImageUrl();\r\n    }\r\n    getImageUrl() {\r\n        let imageUrl = '';\r\n        let currentHeight = 0;\r\n        if(!!this.Images && this.Images.length > 0) {\r\n            // let filteredImages = this.Images.filter(image => {\r\n            //     // if(image.height > currentHeight && image.height - 160 )\r\n            //     return image.width < 700;\r\n            // });\r\n            // return filteredImages[0].url;\r\n            return this.Images[0].url;\r\n        }\r\n        return '';\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/model/artist.ts\n **/","export class ArtistSearchQuery {\r\n    constructor(public id: string, public offset: number) { }\r\n    public scrolling: boolean;\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/model/artistSearchQuery.ts\n **/","import { SpotifyAlbum } from \"./spotifyAlbum\";\r\n\r\nexport class SpotifyAlbums {\r\n    constructor(public total: number, public albums: SpotifyAlbum[]) {}\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/model/spotifyAlbums.ts\n **/","export class Track {\r\n    constructor (\r\n        public Id: string,\r\n        public Name: string,\r\n        public Uri: string,\r\n        public Popularity: string,\r\n        public SpotifyId: string,\r\n        public Bpm: string,\r\n        public Duration: string,\r\n        public Title: string) {}\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/services/model/track.ts\n **/","import { Component, Input } from '@angular/core';\r\n\r\nimport { SpotifyService } from '../../services/spotify.service';\r\nimport { QuantoneService } from '../../services/quantone.service';\r\nimport { SpotifyAlbum } from '../../services/model/spotifyAlbum';\r\n\r\n@Component({\r\n    selector: 'tc-album',\r\n    template: require('./album.component.html'),\r\n      styles: [require('./album.component.css')]\r\n})\r\nexport class AlbumComponent {\r\n    constructor(private spotifyService: SpotifyService,\r\n        private quantoneService: QuantoneService) { }\r\n\r\n    @Input() public album: SpotifyAlbum;\r\n    \r\n  showTracks(album: SpotifyAlbum) {\r\n      if(!album.showTracks && !album.tracksLoaded) {\r\n        this.quantoneService.getAlbum(album.id)\r\n        .subscribe(\r\n            albumResult => this.spotifyService.updateAlbum(album, albumResult),\r\n            error => console.log(<any>error)\r\n        );\r\n      }\r\n      album.showTracks = !album.showTracks;\r\n  }\r\n\r\n  showChevron(album: SpotifyAlbum) {\r\n      album.isUpChevronHidden = !album.showTracks;\r\n      album.isDownChevronHidden = album.showTracks;\r\n      album.isCopyrightHidden = true;\r\n  }\r\n\r\n  showCopyright(album: SpotifyAlbum) {\r\n      album.isUpChevronHidden = true;\r\n      album.isDownChevronHidden = true;\r\n      album.isCopyrightHidden = false;\r\n  }\r\n\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/shared/album/album.component.ts\n **/","import { Directive, HostListener, EventEmitter, Output, OnInit, OnDestroy } from \"@angular/core\";\r\n\r\nimport { Subject } from \"rxjs/Subject\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nconst distanceFromBottomThreshold: number = 500;\r\nconst minDistanceFromBottom: number = 120;\r\n\r\n@Directive({\r\n    selector: \"[infinite-scroll]\",\r\n})\r\nexport class InfiniteScrollComponent implements OnInit, OnDestroy {\r\n    private scrollStream = new Subject();\r\n    private lowestDistanceFromBottom: number = distanceFromBottomThreshold;\r\n    private scrollObservable = this.scrollStream\r\n        .debounceTime(200)\r\n        .subscribe(() => {\r\n            let distanceFromBottom = Math.max(document.body.offsetHeight - (window.pageYOffset + window.innerHeight), 0);\r\n            if (distanceFromBottom >= distanceFromBottomThreshold) {\r\n                this.lowestDistanceFromBottom = distanceFromBottom;\r\n                return;\r\n            }\r\n            if (distanceFromBottom <= this.lowestDistanceFromBottom) {\r\n                this.lowestDistanceFromBottom = Math.max(distanceFromBottom, minDistanceFromBottom);\r\n                this.scroll.emit({});\r\n            }\r\n        });\r\n    @Output() scroll = new EventEmitter();\r\n    @HostListener(\"window:scroll\", [\"$event\"])\r\n    onScrolled(event) {\r\n        this.scrollStream.next({});\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n\r\n    }\r\n}\n\n\n/** WEBPACK FOOTER **\n ** src/app/shared/infinite-scroll/infinite-scroll.component.ts\n **/","module.exports = \"<div infinite-scroll (scroll)=\\\"onScroll()\\\" [@albumState]=\\\"state\\\">\\r\\n    <tc-album *ngFor=\\\"let album of albums | async\\\" \\r\\n            [@albumState]=\\\"album.state\\\" [album]=\\\"album\\\">\\r\\n    </tc-album>\\r\\n    <div [@noResultsState]=\\\"noResultsState\\\">Your search for <span *ngIf=\\\"query.query.trim().length > 0\\\">\\\"{{query.query}}\\\"</span> \\r\\n        <span *ngIf=\\\"query.query.trim().length > 0 && query.label.trim().length > 0\\\"> on the label </span> \\r\\n        <span *ngIf=\\\"query.label.trim().length > 0\\\">\\\"{{query.label}}\\\"</span>\\r\\n         did not return any records. Keep digging the crates.\\r\\n    </div>\\r\\n    <div *ngIf=\\\"recordsHaveEnded()\\\">The record has stopped</div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/albums/albums.component.html\n ** module id = 765\n ** module chunks = 2\n **/","module.exports = \"<div class=\\\"layout-container-dark\\\">\\r\\n    <tc-header></tc-header>\\r\\n</div>\\r\\n<div class=\\\"layout-container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/app.component.html\n ** module id = 766\n ** module chunks = 2\n **/","module.exports = \"<div infinite-scroll (scroll)=\\\"onScroll()\\\" [@albumState]=\\\"state\\\">\\r\\n    <tc-album *ngFor=\\\"let album of albums | async\\\" \\r\\n            [@albumState]=\\\"album.state\\\" [album]=\\\"album\\\">\\r\\n    </tc-album>\\r\\n    <div *ngIf=\\\"recordsHaveEnded()\\\">The record has stopped</div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/artist/artist-albums.component.html\n ** module id = 767\n ** module chunks = 2\n **/","module.exports = \"<h1 class=\\\"name\\\">{{artist?.Name}}</h1>\\r\\n<div class=\\\"image\\\" [@artistState]=\\\"imageState\\\" [ngStyle]=\\\"{'background-image': 'url(' + artist?.ImageUrl + ')'}\\\" ></div>\\r\\n<div class=\\\"bio\\\" [@artistState]=\\\"bioState\\\">{{artist?.Bio}}</div>\\r\\n<tc-artist-albums></tc-artist-albums>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/artist/artist.component.html\n ** module id = 768\n ** module chunks = 2\n **/","module.exports = \"<ul class=\\\"layout-constrained\\\">\\r\\n<li class=\\\"headeritem headeritem-light\\\">\\r\\n    <label class=\\\"glyphicon glyphicon-search\\\" for=\\\"query\\\"></label>\\r\\n    <input id=\\\"query\\\" [ngModel]=\\\"query\\\" (ngModelChange)=\\\"searchByTerm($event)\\\" placeholder=\\\"Search...\\\"/>\\r\\n</li>\\r\\n<li class=\\\"headeritem headeritem-light\\\">\\r\\n    <label class=\\\"glyphicon glyphicon-search\\\" for=\\\"label\\\"></label>\\r\\n    <input id=\\\"label\\\" [ngModel]=\\\"label\\\" (ngModelChange)=\\\"searchByLabel($event)\\\" placeholder=\\\"Record Label...\\\"/>\\r\\n</li>\\r\\n<li class=\\\"headeritem headeritem-reveal\\\" (click)=\\\"toggleYears()\\\">Years<i class=\\\"glyphicon glyphicon-chevron-down\\\" *ngIf=\\\"!showYears\\\"></i><i class=\\\"glyphicon glyphicon-chevron-up\\\" *ngIf=\\\"showYears\\\"></i>\\r\\n</li>\\r\\n</ul>\\r\\n<div *ngIf=\\\"showYears\\\">\\r\\n    <!--<span class=\\\"slider-button glyphicon glyphicon-chevron-left\\\" (click)=\\\"moveSliderRight(sliderItems)\\\"></span>-->\\r\\n    <ul class=\\\"layout-constrained headeritem-margin\\\">\\r\\n        <li class=\\\"headeritem headeritem-light headeritem-no-margin headeritem-reveal\\\">\\r\\n            <input id=\\\"year\\\" [ngModel]=\\\"year\\\" (ngModelChange)=\\\"searchByYear($event)\\\" placeholder=\\\"Year...\\\"/>\\r\\n        </li>\\r\\n        <li class=\\\"headeritem headeritem-reveal\\\" [class.headeritem-selected]=\\\"year === selectedYear\\\" *ngFor=\\\"let year of years\\\" (click)=\\\"searchByYear(year)\\\">{{year}}</li>\\r\\n    </ul>\\r\\n    <!--<span class=\\\"slider-button  glyphicon glyphicon-chevron-right\\\" (click)=\\\"moveSliderRight(sliderItems)\\\"></span>-->\\r\\n</div>\\r\\n<ul class=\\\"layout-constrained headeritem-margin\\\" *ngIf=\\\"showYears\\\">\\r\\n    <li class=\\\"headeritem headeritem-reveal\\\" [class.headeritem-selected]=\\\"year === selectedYear\\\" *ngFor=\\\"let year of yearsRange\\\" (click)=\\\"searchByYear(year)\\\">{{year}}</li>\\r\\n</ul>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/header/header.component.html\n ** module id = 769\n ** module chunks = 2\n **/","module.exports = \"<div class=\\\"listitem row\\\">\\r\\n    <div class=\\\"listitem-image\\\"><img [src]=\\\"album.image.url\\\" /></div>\\r\\n    <span class=\\\"circle\\\">{{album.popularity}}</span>\\r\\n    <a [href]=\\\"album.trustedUri\\\" class=\\\"listitem-large\\\">{{album.name}}</a>\\r\\n    <span class=\\\"listitem-small\\\" *ngFor=\\\"let artist of album.artists; let last=last\\\">\\r\\n        <a routerLink=\\\"/artist/{{artist.id}}\\\">{{artist.name}}</a>\\r\\n        <span *ngIf=\\\"!last\\\">|</span>\\r\\n        <br *ngIf=\\\"last\\\" />\\r\\n    </span>\\r\\n    <span class=\\\"listitem-smaller\\\">{{album.release_date}}</span>\\r\\n</div>\\r\\n<div role=\\\"button\\\" class=\\\"listitemsmall text-center relative\\\" (click)=\\\"showTracks(album)\\\" (mouseover)=\\\"showChevron(album)\\\" (mouseout)=\\\"showCopyright(album)\\\">\\r\\n    <span class=\\\"listitem-subdued absolute-left\\\" [hidden]=\\\"album.isCopyrightHidden\\\">{{album.copyright?.text}}</span>\\r\\n    <i [hidden]=\\\"album.isDownChevronHidden\\\" class=\\\"glyphicon glyphicon-menu-down\\\"></i>\\r\\n    <i [hidden]=\\\"album.isUpChevronHidden\\\" class=\\\"glyphicon glyphicon-menu-up\\\"></i> \\r\\n</div>\\r\\n<template [ngIf]=\\\"album.recordings && album.showTracks\\\">\\r\\n    <div class=\\\"listitemsmall listitemsmall-link\\\" *ngFor=\\\"let recording of album.recordings; let i=index\\\">\\r\\n        <a>{{(i+ 1) + '. ' + recording?.Name}}</a>\\r\\n        {{recording?.Bpm}} <span *ngIf=\\\"!!recording?.Bpm\\\">BPM</span> {{recording?.Duration}} <i *ngIf=\\\"!!recording?.Duration\\\" class=\\\"glyphicon glyphicon-time\\\"></i>\\r\\n    </div>\\r\\n</template>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/shared/album/album.component.html\n ** module id = 770\n ** module chunks = 2\n **/","module.exports = \"body {\\r\\n    margin: 0;\\r\\n    background-color: #292C2C;\\r\\n    color: #79DADA;\\r\\n    font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif;\\r\\n    font-size: 14px;\\r\\n    line-height: 1.42857143;\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n[hidden] {\\r\\n   visibility: hidden !important;\\r\\n}\\r\\n\\r\\na {\\r\\n    color: #35C0E0;\\r\\n}\\r\\na:hover {\\r\\n    color: #35C0E0;\\r\\n}\\r\\na:visited {\\r\\n    color: #35C0E0;\\r\\n}\\r\\n    \\r\\nul {\\r\\n    list-style-type: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n}\\r\\nul li {\\r\\n    display: inline-block;\\r\\n}\\r\\n.layout-container {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    padding: 15px;\\r\\n    max-width: 1000px;\\r\\n}\\r\\n\\r\\n.layout-container-dark {\\r\\n    padding: 2px 0;\\r\\n    background-color: #222;\\r\\n    z-index: 1000;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.layout-constrained {\\r\\n    margin: 0 auto;\\r\\n    max-width: 1000px;\\r\\n    padding: 0;\\r\\n    padding-left: 15px;\\r\\n}\\r\\n\\r\\n.row {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.circle\\r\\n{\\r\\n    display: inline-flex;\\r\\n    border-radius: 50%;\\r\\n    border: solid 2px;\\r\\n    padding: 3px;\\r\\n    justify-content: center;\\r\\n    min-width: 2em;\\r\\n    float: left;\\r\\n    margin: 5px;\\r\\n    margin-right: 16px;\\r\\n    margin-left: 12px;\\r\\n}\\r\\n\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/app.component.css\n ** module id = 979\n ** module chunks = 2\n **/","module.exports = \".name {\\r\\n    margin: 0;\\r\\n    margin-bottom: 4px;\\r\\n    color: #51c5c5;\\r\\n    text-align: center;\\r\\n    font-size: 4em;\\r\\n}\\r\\n\\r\\n.image {\\r\\n    height: 400px; \\r\\n    background-color: #343535; \\r\\n    background-size: contain; \\r\\n    background-repeat: no-repeat; \\r\\n    background-position: center;\\r\\n    border-bottom: solid 1px #2EC7C7;\\r\\n    border-top: solid 1px #2EC7C7;\\r\\n}\\r\\n\\r\\n.bio {\\r\\n    font-size: 1.2em;\\r\\n    margin: 10px 0;\\r\\n    color: #75bbbb;\\r\\n}\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/artist/artist.component.css\n ** module id = 980\n ** module chunks = 2\n **/","module.exports = \"\\r\\n.headeritem {\\r\\n    background-color:  #343535;\\r\\n    display: inline-block;\\r\\n    min-width: 100px;\\r\\n    text-align: center;\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.headeritem a {\\r\\n    padding: 14px;\\r\\n    display: block;\\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.headeritem a:hover {\\r\\n    background-color: #3F4747;\\r\\n}\\r\\n\\r\\n.headeritem-reveal {\\r\\n    margin: 2px 0;\\r\\n    padding: 14px;\\r\\n    color: #35C0E0;\\r\\n}\\r\\n\\r\\n.headeritem-reveal i {\\r\\n    margin-left: 10px;\\r\\n}\\r\\n\\r\\n.headeritem-reveal:hover {\\r\\n    background-color: #3F4747;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.headeritem-selected {\\r\\n    background-color:#3F4747;\\r\\n}\\r\\n\\r\\n.headeritem-margin li.headeritem-no-margin {\\r\\n    margin-right: 0;\\r\\n}\\r\\n\\r\\n.headeritem-margin li {\\r\\n    margin-right: 4px;\\r\\n}\\r\\n\\r\\n.headeritem-hidden {\\r\\n    overflow: hidden;\\r\\n}\\r\\n\\r\\n.glyphicon {\\r\\n    color: #79DADA;\\r\\n    padding-right: 10px;\\r\\n}\\r\\n\\r\\n.headeritem-light {\\r\\n    padding: 14px;\\r\\n    background-color: #3F4747;\\r\\n    font-weight: normal;\\r\\n}\\r\\n\\r\\ninput {\\r\\n    color: white;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    background-color: #3F4747;\\r\\n    border: none;\\r\\n}\\r\\n\\r\\ninput:focus {\\r\\n    outline: none;\\r\\n}\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/header/header.component.css\n ** module id = 981\n ** module chunks = 2\n **/","module.exports = \".listitem {\\r\\n    padding: 12px;\\r\\n    padding-bottom: 2px;\\r\\n    padding-left: 16px;\\r\\n    background-color: #3F4747;\\r\\n    border-top: solid 1px #2EC7C7;\\r\\n    height: 88px;\\r\\n}\\r\\n\\r\\n.listitem-bottomborder {\\r\\n    margin-bottom: 20px;\\r\\n    border-bottom: solid 1px #2EC7C7;\\r\\n}\\r\\n    \\r\\n.listitem-image {\\r\\n    width: 84px;\\r\\n    float: left;\\r\\n}\\r\\n\\r\\n.listitem-large {\\r\\n    display: block;\\r\\n    font-size: 18px;\\r\\n    font-weight: 600;\\r\\n}\\r\\n\\r\\n.listitem-small {\\r\\n    font-size: 13px;\\r\\n    font-weight: normal;\\r\\n    display: inline;\\r\\n}\\r\\n\\r\\n.listitem-subdued {\\r\\n    color: #609090;\\r\\n}\\r\\n\\r\\n.listitem-smaller {\\r\\n    font-size: 10px;\\r\\n    font-weight: normal;\\r\\n    display: inline;\\r\\n}\\r\\n\\r\\n.listitemsmall {\\r\\n    background-color: #343535;\\r\\n    border-bottom: solid 1px #292C2C;\\r\\n    font-size: 12px;\\r\\n    padding-left: 10px;\\r\\n    white-space: nowrap;\\r\\n    vertical-align: middle;\\r\\n    line-height: 26px;\\r\\n}\\r\\n\\r\\n.listitemsmall:first-child {\\r\\n    border-top: solid 1px #292C2C;\\r\\n}\\r\\n\\r\\n.listitemsmall:last-child {\\r\\n    margin-bottom: 20px;\\r\\n    border-bottom: solid 1px #2EC7C7;\\r\\n}\\r\\n\\r\\n.listitemsmall-link:hover {\\r\\n    background-color: #3F4747;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.listitem-constrained {\\r\\n    background-color: #3F4747;\\r\\n    display: inline-block;\\r\\n    border-top: solid 1px #2EC7C7;\\r\\n    \\r\\n    margin: 0 10px 20px 0;\\r\\n}\\r\\n\\r\\n.listitem-constrained-image {\\r\\n    display: block;\\r\\n}\\r\\n\\r\\n.listitemsmall-constrained {\\r\\n    background-color: #343535;\\r\\n    border-bottom: solid 1px #2EC7C7;\\r\\n    font-size: 12px;\\r\\n    padding: 0 10px;\\r\\n    white-space: nowrap;\\r\\n    vertical-align: middle;\\r\\n    line-height: 26px;\\r\\n}\\r\\n\\r\\n.listitem-constrained-name {\\r\\n    font-size: 12px;\\r\\n}\\r\\n\\r\\n.relative {\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\n.absolute-left {\\r\\n    position: absolute;\\r\\n    left: 16px;\\r\\n}\\r\\n\\r\\n.hover-hide:hover {\\r\\n    display: none;\\r\\n}\\r\\n\\r\\n.hover-show:hover {\\r\\n    display: initial;\\r\\n}\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/shared/album/album.component.css\n ** module id = 982\n ** module chunks = 2\n **/"],"mappings":";;;;;;AAAA;AACA;AAEA;AAEA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChjxpHA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AApCA;AAAA;;AAAA;AAqCA;AAAA;AApCA;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAzKA;AAAA;;AAAA;AA0KA;AAAA;AAzKA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrvthDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtzpjuBA;AACA;AACA;AAEA;AACA;AAOA;AAAA;AAOA;AANA;AACA;AACA;AAEA;AACA;AAXA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AAQA;AAAA;AAPA;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACntJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpjptGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxhuFA;AAAA;AAtFA;;;;;;;;;;;;;;;;;;ACzCA;AAMA;AAGA;AAEA;AAEA;AACA;AA2BA;AACA;AAAA;AACA;AACA;AACA;AAMA;AACA;AAGA;AACA;AAXA;AAaqGA;AAAA;AApGA;;;;;;;;;;;;;;;;;;ACzCA;AAMA;AACA;AAGA;AACA;AAGA;AAoBA;AACA;AAAA;AACA;AACA;AAQA;AAEA;AACA;AAXA;AAaA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;AAAA;;AAAA;AA1BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA8DA;AAAA;AA7DA;;;;;;;;;AClCA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AATA;;;;;;;;;ACQA;AAWA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAWA;AACA;AACA;AACA;AACA;AAAA;AAxBA;;;;;;;;;;;;;;;;;;ACRA;AAGA;AAAA;AAuBA;AArBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AAAA;;AAAA;AAwBA;AAAA;AAvBA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjFA;AAEA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AALA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;ACbA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACNA;AAQA;AAAA;AAAA;AANA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAcA;AAAA;AAAA;AAZA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;ACxBA;AAEA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;ACNA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAOA;AAAA;AAAA;AALA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;ACfA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;ACLA;AAMA;AAGA;AAEA;AACA;AAmBA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAKA;AAGA;AACA;AAEA;AACA;AACA;AAjBA;AAmBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAxGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAyFA;AAAA;AAxFA;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AAEA;AACA;AAOA;AAAA;AAEA;AARA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;AAFA;;;;;;;;;ACZA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAlBA;;;;;;;;;ACAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAHA;;;;;;;;;ACEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAVA;;;;;;;;;;;;;;;;;;ACAA;AAEA;AACA;AACA;AAOA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAvBA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AA8BA;AAAA;AA7BA;;;;;;;;;;;;;;;;;;ACXA;AAEA;AAEA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AAXA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAZA;AAAA;;AAAA;AACA;AAAA;;;;AAAA;AApBA;AAAA;AACA;AACA;;AAAA;AA8BA;AAAA;AA7BA;;;;;;;;ACVA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;","sourceRoot":""}